using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using System.IO;
using System.Net;
using System.Diagnostics;

namespace AccountingMS.Forms
{
    public partial class frmAddEmpPDF : Form
    {
        // accountingEntities db = new accountingEntities();
        public frmAddEmpPDF()
        {
            InitializeComponent();


            AccountingMS.accountingEntities dbContext = new AccountingMS.accountingEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.tblEmployees.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                empNoLookUpEdit.Properties.DataSource = dbContext.tblEmployees.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //  AccountingMS.accountingEntities dbContext = new AccountingMS.accountingEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.tblEmployeePdfs.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.tblEmployeePdfs.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {

            if (empNoLookUpEdit.Text != "" && titelTextEdit.Text != "")
            {
                using (accountingEntities db = new accountingEntities())
                {

                    //if (Directory.Exists(fatoraPathButtonEdit.Text))
                    //{
                    string newPath = "\\upload\\" + empNoLookUpEdit.Text + DateTime.Now.ToString("yyyy-MM-dd hh-mm-ss");

                    tblEmployeePdf pdfEmp = new tblEmployeePdf();
                    // pdfEmp.empdate = empdateDateEdit.EditValue + DateTime.Now.ToString("yyyy-MM-dd hh-mm-ss");
                    // var pdfEmply = db.tblEmployeePdfs.Add(Convert.ToDateTime( this.empdateDateEdit.Text));
                    pdfEmp.empNo = Convert.ToInt16(empNoLookUpEdit.EditValue);
                    pdfEmp.titel = titelTextEdit.Text;
                    //pdfEmp.pathpdf  = pathpdfButtonEdit.EditValue.ToString();
                    if (descrTextEdit.Text != "") { pdfEmp.descr = descrTextEdit.EditValue.ToString(); }

                    pdfEmp.pathpdf = newPath + ".pdf";
                    db.tblEmployeePdfs.Add(pdfEmp);
                    db.SaveChanges();
                    fillgridcontrol();

                    File.Copy(pathpdfButtonEdit.Text, Application.StartupPath + "\\" + newPath + ".pdf", true);

                    ClsXtraMssgBox.ShowWarning(MySetting.GetPrivateSetting.LangEng ? "Ok!, Saved successfully" : "تم الحفظ بنجاح");
                    empdateDateEdit.EditValue = DateTime.Now;
                    titelTextEdit.EditValue = "";
                    descrTextEdit.EditValue = "";
                    pathpdfButtonEdit.EditValue = "";

                }
            }
            else
            {
                ClsXtraMssgBox.ShowWarning(MySetting.GetPrivateSetting.LangEng ? "Sorry!, Please select the employee's name or write the file address" : "من فضلك حدد اسم الموظف او اكتب عنوان الملف ");
            }

        }

        void fillgridcontrol()
        {
            using (accountingEntities db = new accountingEntities())
            {
                gridControl1.DataSource = db.tblEmployeePdfs.ToList();
            }
        }

        private void frmAddEmpPDF_Load(object sender, EventArgs e)
        {
            empdateDateEdit.EditValue = DateTime.Now;
            fillgridcontrol();
        }

        private void pathpdfButtonEdit_Properties_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            OpenFileDialog op = new OpenFileDialog();

            op.Filter = "pdf files (*.PDF)|*.pdf";
            op.FilterIndex = 1;
            op.RestoreDirectory = true;

            if (op.ShowDialog() == DialogResult.OK)
            {
                pathpdfButtonEdit.Text = op.FileName;

            }
        }

        private void btnpdf_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            var openpdf = Application.StartupPath + gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "pathpdf");
            openpdf = WebUtility.UrlDecode(openpdf.ToString());
            //Process.Start((openpdf));

            ProcessStartInfo startInfo = new ProcessStartInfo(@openpdf);
            Process.Start(startInfo);

        }
    }
}

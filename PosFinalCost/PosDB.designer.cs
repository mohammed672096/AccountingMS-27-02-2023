#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PosFinalCost
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PosFinalCostDB")]
	public partial class PosDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertBarcode(Barcode instance);
    partial void UpdateBarcode(Barcode instance);
    partial void DeleteBarcode(Barcode instance);
    partial void InsertBox(Box instance);
    partial void UpdateBox(Box instance);
    partial void DeleteBox(Box instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertDefaultAccount(DefaultAccount instance);
    partial void UpdateDefaultAccount(DefaultAccount instance);
    partial void DeleteDefaultAccount(DefaultAccount instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertEntrySub(EntrySub instance);
    partial void UpdateEntrySub(EntrySub instance);
    partial void DeleteEntrySub(EntrySub instance);
    partial void InsertEntryMain(EntryMain instance);
    partial void UpdateEntryMain(EntryMain instance);
    partial void DeleteEntryMain(EntryMain instance);
    partial void InsertFinancialYear(FinancialYear instance);
    partial void UpdateFinancialYear(FinancialYear instance);
    partial void DeleteFinancialYear(FinancialYear instance);
    partial void InsertGroupStr(GroupStr instance);
    partial void UpdateGroupStr(GroupStr instance);
    partial void DeleteGroupStr(GroupStr instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertProductColor(ProductColor instance);
    partial void UpdateProductColor(ProductColor instance);
    partial void DeleteProductColor(ProductColor instance);
    partial void InsertProductQunatity(ProductQunatity instance);
    partial void UpdateProductQunatity(ProductQunatity instance);
    partial void DeleteProductQunatity(ProductQunatity instance);
    partial void InsertRoleTbl(RoleTbl instance);
    partial void UpdateRoleTbl(RoleTbl instance);
    partial void DeleteRoleTbl(RoleTbl instance);
    partial void InsertStoreTbl(StoreTbl instance);
    partial void UpdateStoreTbl(StoreTbl instance);
    partial void DeleteStoreTbl(StoreTbl instance);
    partial void InsertSupplySub(SupplySub instance);
    partial void UpdateSupplySub(SupplySub instance);
    partial void DeleteSupplySub(SupplySub instance);
    partial void InsertUserBranchTbl(UserBranchTbl instance);
    partial void UpdateUserBranchTbl(UserBranchTbl instance);
    partial void DeleteUserBranchTbl(UserBranchTbl instance);
    partial void InsertUserTbl(UserTbl instance);
    partial void UpdateUserTbl(UserTbl instance);
    partial void DeleteUserTbl(UserTbl instance);
    partial void InsertPrdMeasurment(PrdMeasurment instance);
    partial void UpdatePrdMeasurment(PrdMeasurment instance);
    partial void DeletePrdMeasurment(PrdMeasurment instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertPrdExpirateDetail(PrdExpirateDetail instance);
    partial void UpdatePrdExpirateDetail(PrdExpirateDetail instance);
    partial void DeletePrdExpirateDetail(PrdExpirateDetail instance);
    partial void InsertPrdExpirateMain(PrdExpirateMain instance);
    partial void UpdatePrdExpirateMain(PrdExpirateMain instance);
    partial void DeletePrdExpirateMain(PrdExpirateMain instance);
    partial void InsertPrdManufacture(PrdManufacture instance);
    partial void UpdatePrdManufacture(PrdManufacture instance);
    partial void DeletePrdManufacture(PrdManufacture instance);
    partial void InsertUserControlTbl(UserControlTbl instance);
    partial void UpdateUserControlTbl(UserControlTbl instance);
    partial void DeleteUserControlTbl(UserControlTbl instance);
    partial void InsertRoleControlTbl(RoleControlTbl instance);
    partial void UpdateRoleControlTbl(RoleControlTbl instance);
    partial void DeleteRoleControlTbl(RoleControlTbl instance);
    partial void InsertControlTbl(ControlTbl instance);
    partial void UpdateControlTbl(ControlTbl instance);
    partial void DeleteControlTbl(ControlTbl instance);
    partial void InsertControlData(ControlData instance);
    partial void UpdateControlData(ControlData instance);
    partial void DeleteControlData(ControlData instance);
    partial void InsertDrawerPeriod(DrawerPeriod instance);
    partial void UpdateDrawerPeriod(DrawerPeriod instance);
    partial void DeleteDrawerPeriod(DrawerPeriod instance);
    partial void InsertUserSettingsProfile(UserSettingsProfile instance);
    partial void UpdateUserSettingsProfile(UserSettingsProfile instance);
    partial void DeleteUserSettingsProfile(UserSettingsProfile instance);
    partial void InsertSupplyMain(SupplyMain instance);
    partial void UpdateSupplyMain(SupplyMain instance);
    partial void DeleteSupplyMain(SupplyMain instance);
    #endregion
		
		public PosDBDataContext() : 
				base(global::PosFinalCost.Properties.Settings.Default.PosFinalCostDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public PosDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PosDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PosDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PosDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bank> Banks
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<Barcode> Barcodes
		{
			get
			{
				return this.GetTable<Barcode>();
			}
		}
		
		public System.Data.Linq.Table<Box> Boxes
		{
			get
			{
				return this.GetTable<Box>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<DefaultAccount> DefaultAccounts
		{
			get
			{
				return this.GetTable<DefaultAccount>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<EntrySub> EntrySubs
		{
			get
			{
				return this.GetTable<EntrySub>();
			}
		}
		
		public System.Data.Linq.Table<EntryMain> EntryMains
		{
			get
			{
				return this.GetTable<EntryMain>();
			}
		}
		
		public System.Data.Linq.Table<FinancialYear> FinancialYears
		{
			get
			{
				return this.GetTable<FinancialYear>();
			}
		}
		
		public System.Data.Linq.Table<GroupStr> GroupStrs
		{
			get
			{
				return this.GetTable<GroupStr>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<ProductColor> ProductColors
		{
			get
			{
				return this.GetTable<ProductColor>();
			}
		}
		
		public System.Data.Linq.Table<ProductQunatity> ProductQunatities
		{
			get
			{
				return this.GetTable<ProductQunatity>();
			}
		}
		
		public System.Data.Linq.Table<RoleTbl> RoleTbls
		{
			get
			{
				return this.GetTable<RoleTbl>();
			}
		}
		
		public System.Data.Linq.Table<StoreTbl> StoreTbls
		{
			get
			{
				return this.GetTable<StoreTbl>();
			}
		}
		
		public System.Data.Linq.Table<SupplySub> SupplySubs
		{
			get
			{
				return this.GetTable<SupplySub>();
			}
		}
		
		public System.Data.Linq.Table<UserBranchTbl> UserBranchTbls
		{
			get
			{
				return this.GetTable<UserBranchTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserTbl> UserTbls
		{
			get
			{
				return this.GetTable<UserTbl>();
			}
		}
		
		public System.Data.Linq.Table<PrdMeasurment> PrdMeasurments
		{
			get
			{
				return this.GetTable<PrdMeasurment>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<PrdExpirateDetail> PrdExpirateDetails
		{
			get
			{
				return this.GetTable<PrdExpirateDetail>();
			}
		}
		
		public System.Data.Linq.Table<PrdExpirateMain> PrdExpirateMains
		{
			get
			{
				return this.GetTable<PrdExpirateMain>();
			}
		}
		
		public System.Data.Linq.Table<PrdManufacture> PrdManufactures
		{
			get
			{
				return this.GetTable<PrdManufacture>();
			}
		}
		
		public System.Data.Linq.Table<UserControlTbl> UserControlTbls
		{
			get
			{
				return this.GetTable<UserControlTbl>();
			}
		}
		
		public System.Data.Linq.Table<RoleControlTbl> RoleControlTbls
		{
			get
			{
				return this.GetTable<RoleControlTbl>();
			}
		}
		
		public System.Data.Linq.Table<ControlTbl> ControlTbls
		{
			get
			{
				return this.GetTable<ControlTbl>();
			}
		}
		
		public System.Data.Linq.Table<ControlData> ControlDatas
		{
			get
			{
				return this.GetTable<ControlData>();
			}
		}
		
		public System.Data.Linq.Table<DrawerPeriod> DrawerPeriods
		{
			get
			{
				return this.GetTable<DrawerPeriod>();
			}
		}
		
		public System.Data.Linq.Table<UserSettingsProfile> UserSettingsProfiles
		{
			get
			{
				return this.GetTable<UserSettingsProfile>();
			}
		}
		
		public System.Data.Linq.Table<SupplyMain> SupplyMains
		{
			get
			{
				return this.GetTable<SupplyMain>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetColumnForTable")]
		public ISingleResult<GetColumnForTableResult> GetColumnForTable([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TableName", DbType="NVarChar(MAX)")] string tableName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName);
			return ((ISingleResult<GetColumnForTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsBarcodeToPos")]
		public int InsBarcodeToPos([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string brcNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> brcPrdMsurId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> brcBrnId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, brcNo, brcPrdMsurId, brcBrnId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsGroupToPos")]
		public int InsGroupToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="No", DbType="Int")] System.Nullable<int> no, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccNo", DbType="BigInt")] System.Nullable<long> accNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Currency", DbType="TinyInt")] System.Nullable<byte> currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesAccNo", DbType="BigInt")] System.Nullable<long> salesAccNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CostAccNo", DbType="BigInt")] System.Nullable<long> costAccNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DscntAccNo", DbType="BigInt")] System.Nullable<long> dscntAccNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesRtrnAccNo", DbType="BigInt")] System.Nullable<long> salesRtrnAccNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CostRtrnAccNo", DbType="BigInt")] System.Nullable<long> costRtrnAccNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrnId", DbType="SmallInt")] System.Nullable<short> brnId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="TinyInt")] System.Nullable<byte> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseAccNo", DbType="BigInt")] System.Nullable<long> purchaseAccNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseRtrnAccNo", DbType="BigInt")] System.Nullable<long> purchaseRtrnAccNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, no, name, accNo, currency, salesAccNo, costAccNo, dscntAccNo, salesRtrnAccNo, costRtrnAccNo, brnId, status, purchaseAccNo, purchaseRtrnAccNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsStoreToPos")]
		public int InsStoreToPos([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> strNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string strName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string strPhnNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> strBrnId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> strStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, strNo, strName, strPhnNo, strBrnId, strStatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsBankToPos")]
		public int InsBankToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="SmallInt")] System.Nullable<short> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="No", DbType="Int")] System.Nullable<int> no, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccNo", DbType="BigInt")] System.Nullable<long> accNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(MAX)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Currency", DbType="TinyInt")] System.Nullable<byte> currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Celling", DbType="Int")] System.Nullable<int> celling, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrnId", DbType="SmallInt")] System.Nullable<short> brnId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SwiftCode", DbType="NVarChar(MAX)")] string swiftCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccIBAN", DbType="NVarChar(MAX)")] string accIBAN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccNoInBank", DbType="NVarChar(MAX)")] string accNoInBank, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NameEn", DbType="NVarChar(MAX)")] string nameEn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, no, accNo, name, currency, celling, brnId, swiftCode, accIBAN, accNoInBank, nameEn);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsBoxToPos")]
		public int InsBoxToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="SmallInt")] System.Nullable<short> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="No", DbType="Int")] System.Nullable<int> no, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccNo", DbType="BigInt")] System.Nullable<long> accNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(MAX)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Currency", DbType="TinyInt")] System.Nullable<byte> currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Celling", DbType="Int")] System.Nullable<int> celling, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrnId", DbType="SmallInt")] System.Nullable<short> brnId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, no, accNo, name, currency, celling, brnId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsCurrencyToPos")]
		public int InsCurrencyToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="SmallInt")] System.Nullable<short> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sign", DbType="NVarChar(MAX)")] string sign, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(MAX)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="TinyInt")] System.Nullable<byte> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Change", DbType="SmallInt")] System.Nullable<short> change)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, sign, name, type, change);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsDefaultAccountToPos")]
		public int InsDefaultAccountToPos([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccNo", DbType="Int")] System.Nullable<int> accNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="TinyInt")] System.Nullable<byte> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrnId", DbType="SmallInt")] System.Nullable<short> brnId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, accNo, status, brnId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsBranchToPos")]
		public int InsBranchToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="SmallInt")] System.Nullable<short> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="No", DbType="SmallInt")] System.Nullable<short> no, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(MAX)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NameEn", DbType="NVarChar(MAX)")] string nameEn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(MAX)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddressEn", DbType="NVarChar(MAX)")] string addressEn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(MAX)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhnNo", DbType="NVarChar(MAX)")] string phnNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FaxNo", DbType="NVarChar(MAX)")] string faxNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MailBox", DbType="NVarChar(MAX)")] string mailBox, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaxNo", DbType="NVarChar(MAX)")] string taxNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TradeNo", DbType="NVarChar(MAX)")] string tradeNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Bit")] System.Nullable<bool> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, no, name, nameEn, address, addressEn, email, phnNo, faxNo, mailBox, taxNo, tradeNo, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsFinancialYearToPos")]
		public int InsFinancialYearToPos([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(MAX)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateStart", DbType="SmallDateTime")] System.Nullable<System.DateTime> dateStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateEnd", DbType="SmallDateTime")] System.Nullable<System.DateTime> dateEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrnId", DbType="SmallInt")] System.Nullable<short> brnId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, dateStart, dateEnd, brnId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsCustomerToPos")]
		public int InsCustomerToPos(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="No", DbType="Int")] System.Nullable<int> no, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccNo", DbType="BigInt")] System.Nullable<long> accNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(MAX)")] string name, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhnNo", DbType="NVarChar(MAX)")] string phnNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Country", DbType="NVarChar(MAX)")] string country, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(MAX)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(MAX)")] string address, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(MAX)")] string email, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellingCredit", DbType="BigInt")] System.Nullable<long> cellingCredit, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Currency", DbType="TinyInt")] System.Nullable<byte> currency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalePrice", DbType="TinyInt")] System.Nullable<byte> salePrice, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaxNo", DbType="NVarChar(MAX)")] string taxNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrnId", DbType="SmallInt")] System.Nullable<short> brnId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="TinyInt")] System.Nullable<byte> status, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NameEn", DbType="NVarChar(MAX)")] string nameEn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryEn", DbType="NVarChar(MAX)")] string countryEn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CityEn", DbType="NVarChar(MAX)")] string cityEn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddressEn", DbType="NVarChar(MAX)")] string addressEn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommercialRegister", DbType="NVarChar(MAX)")] string commercialRegister, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PostalCode", DbType="NVarChar(MAX)")] string postalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="SmallInt")] System.Nullable<short> bankId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddNo", DbType="NVarChar(MAX)")] string addNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BuildingNo", DbType="NVarChar(MAX)")] string buildingNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnotherID", DbType="NVarChar(MAX)")] string anotherID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="District", DbType="NVarChar(MAX)")] string district, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictEn", DbType="NVarChar(MAX)")] string districtEn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, no, accNo, name, phnNo, country, city, address, email, cellingCredit, currency, salePrice, taxNo, brnId, status, nameEn, countryEn, cityEn, addressEn, commercialRegister, postalCode, bankId, addNo, buildingNo, anotherID, district, districtEn);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsUserToPos")]
		public int InsUserToPos([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(MAX)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pass", DbType="NVarChar(MAX)")] string pass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, pass);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsProductColorToPos")]
		public int InsProductColorToPos([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quan", DbType="SmallInt")] System.Nullable<short> quan, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Html", DbType="NVarChar(MAX)")] string html)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, quan, html);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsProPriceToPos")]
		public int InsProPriceToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> prPrdId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> pr1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> pr2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> pr3, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> prQuantity1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> prQuantity2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> prQuantity3, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> prdBrnId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> prStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, prPrdId, pr1, pr2, pr3, prQuantity1, prQuantity2, prQuantity3, prdBrnId, prStatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsProQuanToPos")]
		public int InsProQuanToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> prdId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Float")] System.Nullable<double> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubQuantity", DbType="Float")] System.Nullable<double> subQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubQuantity3", DbType="Float")] System.Nullable<double> subQuantity3, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrId", DbType="SmallInt")] System.Nullable<short> strId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrnId", DbType="SmallInt")] System.Nullable<short> brnId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="TinyInt")] System.Nullable<byte> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, prdId, quantity, subQuantity, subQuantity3, strId, brnId, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsProMeasurmentToPos")]
		public int InsProMeasurmentToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalePrice", DbType="Float")] System.Nullable<double> salePrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MinSalePrice", DbType="Float")] System.Nullable<double> minSalePrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RetailPrice", DbType="Float")] System.Nullable<double> retailPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BatchPrice", DbType="Float")] System.Nullable<double> batchPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Conversion", DbType="Float")] System.Nullable<double> conversion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Default", DbType="Bit")] System.Nullable<bool> @default, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrdId", DbType="Int")] System.Nullable<int> prdId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weight", DbType="Bit")] System.Nullable<bool> weight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrnId", DbType="SmallInt")] System.Nullable<short> brnId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="TinyInt")] System.Nullable<byte> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manufacture", DbType="Bit")] System.Nullable<bool> manufacture)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, price, salePrice, minSalePrice, retailPrice, batchPrice, conversion, @default, prdId, weight, brnId, status, manufacture);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsProductToPos")]
		public int InsProductToPos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string prdNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string prdName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string prdNameEng, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> prdGrpNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string prdDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> prdSaleTax, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> prdBrnId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> prdStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> prdPriceTax, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReorderLevel", DbType="Float")] System.Nullable<double> reorderLevel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxLevel", DbType="Float")] System.Nullable<double> maxLevel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> prdPurchaseTax, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Suspended", DbType="Bit")] System.Nullable<bool> suspended)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, prdNo, prdName, prdNameEng, prdGrpNo, prdDesc, prdSaleTax, prdBrnId, prdStatus, prdPriceTax, reorderLevel, maxLevel, prdPurchaseTax, suspended);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetOpeningBalance")]
		public ISingleResult<GetOpeningBalanceResult> GetOpeningBalance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BoxID", DbType="SmallInt")] System.Nullable<short> boxID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="SmallInt")] System.Nullable<short> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BranchID", DbType="SmallInt")] System.Nullable<short> branchID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, boxID, userID, branchID);
			return ((ISingleResult<GetOpeningBalanceResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private int _No;
		
		private long _AccNo;
		
		private string _Name;
		
		private System.Nullable<byte> _Currency;
		
		private System.Nullable<int> _Celling;
		
		private System.Nullable<short> _BrnId;
		
		private string _SwiftCode;
		
		private string _AccIBAN;
		
		private string _AccNoInBank;
		
		private string _NameEn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnAccNoChanging(long value);
    partial void OnAccNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCurrencyChanging(System.Nullable<byte> value);
    partial void OnCurrencyChanged();
    partial void OnCellingChanging(System.Nullable<int> value);
    partial void OnCellingChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnSwiftCodeChanging(string value);
    partial void OnSwiftCodeChanged();
    partial void OnAccIBANChanging(string value);
    partial void OnAccIBANChanged();
    partial void OnAccNoInBankChanging(string value);
    partial void OnAccNoInBankChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    #endregion
		
		public Bank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="BigInt NOT NULL")]
		public long AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="TinyInt")]
		public System.Nullable<byte> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celling", DbType="Int")]
		public System.Nullable<int> Celling
		{
			get
			{
				return this._Celling;
			}
			set
			{
				if ((this._Celling != value))
				{
					this.OnCellingChanging(value);
					this.SendPropertyChanging();
					this._Celling = value;
					this.SendPropertyChanged("Celling");
					this.OnCellingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwiftCode", DbType="NVarChar(MAX)")]
		public string SwiftCode
		{
			get
			{
				return this._SwiftCode;
			}
			set
			{
				if ((this._SwiftCode != value))
				{
					this.OnSwiftCodeChanging(value);
					this.SendPropertyChanging();
					this._SwiftCode = value;
					this.SendPropertyChanged("SwiftCode");
					this.OnSwiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccIBAN", DbType="NVarChar(MAX)")]
		public string AccIBAN
		{
			get
			{
				return this._AccIBAN;
			}
			set
			{
				if ((this._AccIBAN != value))
				{
					this.OnAccIBANChanging(value);
					this.SendPropertyChanging();
					this._AccIBAN = value;
					this.SendPropertyChanged("AccIBAN");
					this.OnAccIBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNoInBank", DbType="NVarChar(MAX)")]
		public string AccNoInBank
		{
			get
			{
				return this._AccNoInBank;
			}
			set
			{
				if ((this._AccNoInBank != value))
				{
					this.OnAccNoInBankChanging(value);
					this.SendPropertyChanging();
					this._AccNoInBank = value;
					this.SendPropertyChanged("AccNoInBank");
					this.OnAccNoInBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(MAX)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Barcode")]
	public partial class Barcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MsurBarcode;
		
		private int _MsurId;
		
		private short _BrnId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMsurBarcodeChanging(string value);
    partial void OnMsurBarcodeChanged();
    partial void OnMsurIdChanging(int value);
    partial void OnMsurIdChanged();
    partial void OnBrnIdChanging(short value);
    partial void OnBrnIdChanged();
    #endregion
		
		public Barcode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsurBarcode", DbType="NVarChar(MAX)")]
		public string MsurBarcode
		{
			get
			{
				return this._MsurBarcode;
			}
			set
			{
				if ((this._MsurBarcode != value))
				{
					this.OnMsurBarcodeChanging(value);
					this.SendPropertyChanging();
					this._MsurBarcode = value;
					this.SendPropertyChanged("MsurBarcode");
					this.OnMsurBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsurId", DbType="Int NOT NULL")]
		public int MsurId
		{
			get
			{
				return this._MsurId;
			}
			set
			{
				if ((this._MsurId != value))
				{
					this.OnMsurIdChanging(value);
					this.SendPropertyChanging();
					this._MsurId = value;
					this.SendPropertyChanged("MsurId");
					this.OnMsurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt NOT NULL")]
		public short BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Box")]
	public partial class Box : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private int _No;
		
		private long _AccNo;
		
		private System.Nullable<byte> _Currency;
		
		private string _Name;
		
		private System.Nullable<int> _Celling;
		
		private System.Nullable<short> _BrnId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnAccNoChanging(long value);
    partial void OnAccNoChanged();
    partial void OnCurrencyChanging(System.Nullable<byte> value);
    partial void OnCurrencyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCellingChanging(System.Nullable<int> value);
    partial void OnCellingChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    #endregion
		
		public Box()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="BigInt NOT NULL")]
		public long AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="TinyInt")]
		public System.Nullable<byte> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celling", DbType="Int")]
		public System.Nullable<int> Celling
		{
			get
			{
				return this._Celling;
			}
			set
			{
				if ((this._Celling != value))
				{
					this.OnCellingChanging(value);
					this.SendPropertyChanging();
					this._Celling = value;
					this.SendPropertyChanged("Celling");
					this.OnCellingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private short _No;
		
		private string _Name;
		
		private string _NameEn;
		
		private string _Address;
		
		private string _AddressEn;
		
		private string _Email;
		
		private string _PhnNo;
		
		private string _FaxNo;
		
		private string _MailBox;
		
		private string _TaxNo;
		
		private string _TradeNo;
		
		private bool _Status;
		
		private byte[] _Image;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNoChanging(short value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddressEnChanging(string value);
    partial void OnAddressEnChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhnNoChanging(string value);
    partial void OnPhnNoChanged();
    partial void OnFaxNoChanging(string value);
    partial void OnFaxNoChanged();
    partial void OnMailBoxChanging(string value);
    partial void OnMailBoxChanged();
    partial void OnTaxNoChanging(string value);
    partial void OnTaxNoChanged();
    partial void OnTradeNoChanging(string value);
    partial void OnTradeNoChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnImageChanging(byte[] value);
    partial void OnImageChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="SmallInt NOT NULL")]
		public short No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(MAX)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressEn", DbType="NVarChar(MAX)")]
		public string AddressEn
		{
			get
			{
				return this._AddressEn;
			}
			set
			{
				if ((this._AddressEn != value))
				{
					this.OnAddressEnChanging(value);
					this.SendPropertyChanging();
					this._AddressEn = value;
					this.SendPropertyChanged("AddressEn");
					this.OnAddressEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhnNo", DbType="NVarChar(MAX)")]
		public string PhnNo
		{
			get
			{
				return this._PhnNo;
			}
			set
			{
				if ((this._PhnNo != value))
				{
					this.OnPhnNoChanging(value);
					this.SendPropertyChanging();
					this._PhnNo = value;
					this.SendPropertyChanged("PhnNo");
					this.OnPhnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNo", DbType="NVarChar(MAX)")]
		public string FaxNo
		{
			get
			{
				return this._FaxNo;
			}
			set
			{
				if ((this._FaxNo != value))
				{
					this.OnFaxNoChanging(value);
					this.SendPropertyChanging();
					this._FaxNo = value;
					this.SendPropertyChanged("FaxNo");
					this.OnFaxNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailBox", DbType="NVarChar(MAX)")]
		public string MailBox
		{
			get
			{
				return this._MailBox;
			}
			set
			{
				if ((this._MailBox != value))
				{
					this.OnMailBoxChanging(value);
					this.SendPropertyChanging();
					this._MailBox = value;
					this.SendPropertyChanged("MailBox");
					this.OnMailBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNo", DbType="NVarChar(MAX)")]
		public string TaxNo
		{
			get
			{
				return this._TaxNo;
			}
			set
			{
				if ((this._TaxNo != value))
				{
					this.OnTaxNoChanging(value);
					this.SendPropertyChanging();
					this._TaxNo = value;
					this.SendPropertyChanged("TaxNo");
					this.OnTaxNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeNo", DbType="NVarChar(MAX)")]
		public string TradeNo
		{
			get
			{
				return this._TradeNo;
			}
			set
			{
				if ((this._TradeNo != value))
				{
					this.OnTradeNoChanging(value);
					this.SendPropertyChanging();
					this._TradeNo = value;
					this.SendPropertyChanged("TradeNo");
					this.OnTradeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public byte[] Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _NameEn;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private string _Sign;
		
		private byte _Type;
		
		private System.Nullable<short> _Change;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSignChanging(string value);
    partial void OnSignChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnChangeChanging(System.Nullable<short> value);
    partial void OnChangeChanged();
    #endregion
		
		public Currency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Sign
		{
			get
			{
				return this._Sign;
			}
			set
			{
				if ((this._Sign != value))
				{
					this.OnSignChanging(value);
					this.SendPropertyChanging();
					this._Sign = value;
					this.SendPropertyChanged("Sign");
					this.OnSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Change", DbType="SmallInt")]
		public System.Nullable<short> Change
		{
			get
			{
				return this._Change;
			}
			set
			{
				if ((this._Change != value))
				{
					this.OnChangeChanging(value);
					this.SendPropertyChanging();
					this._Change = value;
					this.SendPropertyChanged("Change");
					this.OnChangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefaultAccount")]
	public partial class DefaultAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private int _AccNo;
		
		private byte _Status;
		
		private short _BrnId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnAccNoChanging(int value);
    partial void OnAccNoChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnBrnIdChanging(short value);
    partial void OnBrnIdChanged();
    #endregion
		
		public DefaultAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="Int NOT NULL")]
		public int AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt NOT NULL")]
		public short BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _No;
		
		private long _AccNo;
		
		private string _Name;
		
		private string _PhnNo;
		
		private string _Country;
		
		private string _City;
		
		private string _Address;
		
		private string _Email;
		
		private System.Nullable<long> _CellingCredit;
		
		private System.Nullable<byte> _Currency;
		
		private System.Nullable<byte> _SalePrice;
		
		private string _TaxNo;
		
		private System.Nullable<short> _BrnId;
		
		private byte _Status;
		
		private string _NameEn;
		
		private string _CountryEn;
		
		private string _CityEn;
		
		private string _AddressEn;
		
		private string _CommercialRegister;
		
		private string _PostalCode;
		
		private System.Nullable<short> _BankId;
		
		private string _AddNo;
		
		private string _BuildingNo;
		
		private string _AnotherID;
		
		private string _District;
		
		private string _DistrictEn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnAccNoChanging(long value);
    partial void OnAccNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhnNoChanging(string value);
    partial void OnPhnNoChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCellingCreditChanging(System.Nullable<long> value);
    partial void OnCellingCreditChanged();
    partial void OnCurrencyChanging(System.Nullable<byte> value);
    partial void OnCurrencyChanged();
    partial void OnSalePriceChanging(System.Nullable<byte> value);
    partial void OnSalePriceChanged();
    partial void OnTaxNoChanging(string value);
    partial void OnTaxNoChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnCountryEnChanging(string value);
    partial void OnCountryEnChanged();
    partial void OnCityEnChanging(string value);
    partial void OnCityEnChanged();
    partial void OnAddressEnChanging(string value);
    partial void OnAddressEnChanged();
    partial void OnCommercialRegisterChanging(string value);
    partial void OnCommercialRegisterChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnBankIdChanging(System.Nullable<short> value);
    partial void OnBankIdChanged();
    partial void OnAddNoChanging(string value);
    partial void OnAddNoChanged();
    partial void OnBuildingNoChanging(string value);
    partial void OnBuildingNoChanged();
    partial void OnAnotherIDChanging(string value);
    partial void OnAnotherIDChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnDistrictEnChanging(string value);
    partial void OnDistrictEnChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="BigInt NOT NULL")]
		public long AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhnNo", DbType="NVarChar(MAX)")]
		public string PhnNo
		{
			get
			{
				return this._PhnNo;
			}
			set
			{
				if ((this._PhnNo != value))
				{
					this.OnPhnNoChanging(value);
					this.SendPropertyChanging();
					this._PhnNo = value;
					this.SendPropertyChanged("PhnNo");
					this.OnPhnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellingCredit", DbType="BigInt")]
		public System.Nullable<long> CellingCredit
		{
			get
			{
				return this._CellingCredit;
			}
			set
			{
				if ((this._CellingCredit != value))
				{
					this.OnCellingCreditChanging(value);
					this.SendPropertyChanging();
					this._CellingCredit = value;
					this.SendPropertyChanged("CellingCredit");
					this.OnCellingCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="TinyInt")]
		public System.Nullable<byte> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="TinyInt")]
		public System.Nullable<byte> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNo", DbType="NVarChar(MAX)")]
		public string TaxNo
		{
			get
			{
				return this._TaxNo;
			}
			set
			{
				if ((this._TaxNo != value))
				{
					this.OnTaxNoChanging(value);
					this.SendPropertyChanging();
					this._TaxNo = value;
					this.SendPropertyChanged("TaxNo");
					this.OnTaxNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(MAX)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryEn", DbType="NVarChar(MAX)")]
		public string CountryEn
		{
			get
			{
				return this._CountryEn;
			}
			set
			{
				if ((this._CountryEn != value))
				{
					this.OnCountryEnChanging(value);
					this.SendPropertyChanging();
					this._CountryEn = value;
					this.SendPropertyChanged("CountryEn");
					this.OnCountryEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityEn", DbType="NVarChar(MAX)")]
		public string CityEn
		{
			get
			{
				return this._CityEn;
			}
			set
			{
				if ((this._CityEn != value))
				{
					this.OnCityEnChanging(value);
					this.SendPropertyChanging();
					this._CityEn = value;
					this.SendPropertyChanged("CityEn");
					this.OnCityEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressEn", DbType="NVarChar(MAX)")]
		public string AddressEn
		{
			get
			{
				return this._AddressEn;
			}
			set
			{
				if ((this._AddressEn != value))
				{
					this.OnAddressEnChanging(value);
					this.SendPropertyChanging();
					this._AddressEn = value;
					this.SendPropertyChanged("AddressEn");
					this.OnAddressEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommercialRegister", DbType="NVarChar(MAX)")]
		public string CommercialRegister
		{
			get
			{
				return this._CommercialRegister;
			}
			set
			{
				if ((this._CommercialRegister != value))
				{
					this.OnCommercialRegisterChanging(value);
					this.SendPropertyChanging();
					this._CommercialRegister = value;
					this.SendPropertyChanged("CommercialRegister");
					this.OnCommercialRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="SmallInt")]
		public System.Nullable<short> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNo", DbType="NVarChar(MAX)")]
		public string AddNo
		{
			get
			{
				return this._AddNo;
			}
			set
			{
				if ((this._AddNo != value))
				{
					this.OnAddNoChanging(value);
					this.SendPropertyChanging();
					this._AddNo = value;
					this.SendPropertyChanged("AddNo");
					this.OnAddNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingNo", DbType="NVarChar(MAX)")]
		public string BuildingNo
		{
			get
			{
				return this._BuildingNo;
			}
			set
			{
				if ((this._BuildingNo != value))
				{
					this.OnBuildingNoChanging(value);
					this.SendPropertyChanging();
					this._BuildingNo = value;
					this.SendPropertyChanged("BuildingNo");
					this.OnBuildingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnotherID", DbType="NVarChar(MAX)")]
		public string AnotherID
		{
			get
			{
				return this._AnotherID;
			}
			set
			{
				if ((this._AnotherID != value))
				{
					this.OnAnotherIDChanging(value);
					this.SendPropertyChanging();
					this._AnotherID = value;
					this.SendPropertyChanged("AnotherID");
					this.OnAnotherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(MAX)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictEn", DbType="NVarChar(MAX)")]
		public string DistrictEn
		{
			get
			{
				return this._DistrictEn;
			}
			set
			{
				if ((this._DistrictEn != value))
				{
					this.OnDistrictEnChanging(value);
					this.SendPropertyChanging();
					this._DistrictEn = value;
					this.SendPropertyChanged("DistrictEn");
					this.OnDistrictEnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrySub")]
	public partial class EntrySub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ParentID;
		
		private System.Nullable<long> _AccNo;
		
		private string _Notes;
		
		private System.Nullable<double> _Madin;
		
		private System.Nullable<double> _Dain;
		
		private System.Nullable<double> _MadinFrgn;
		
		private System.Nullable<double> _DainFrgn;
		
		private System.Nullable<byte> _Currency;
		
		private System.Nullable<short> _CurChange;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<short> _BranchID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnAccNoChanging(System.Nullable<long> value);
    partial void OnAccNoChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnMadinChanging(System.Nullable<double> value);
    partial void OnMadinChanged();
    partial void OnDainChanging(System.Nullable<double> value);
    partial void OnDainChanged();
    partial void OnMadinFrgnChanging(System.Nullable<double> value);
    partial void OnMadinFrgnChanged();
    partial void OnDainFrgnChanging(System.Nullable<double> value);
    partial void OnDainFrgnChanged();
    partial void OnCurrencyChanging(System.Nullable<byte> value);
    partial void OnCurrencyChanged();
    partial void OnCurChangeChanging(System.Nullable<short> value);
    partial void OnCurChangeChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnBranchIDChanging(System.Nullable<short> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public EntrySub()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="BigInt")]
		public System.Nullable<long> AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Madin", DbType="Float")]
		public System.Nullable<double> Madin
		{
			get
			{
				return this._Madin;
			}
			set
			{
				if ((this._Madin != value))
				{
					this.OnMadinChanging(value);
					this.SendPropertyChanging();
					this._Madin = value;
					this.SendPropertyChanged("Madin");
					this.OnMadinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dain", DbType="Float")]
		public System.Nullable<double> Dain
		{
			get
			{
				return this._Dain;
			}
			set
			{
				if ((this._Dain != value))
				{
					this.OnDainChanging(value);
					this.SendPropertyChanging();
					this._Dain = value;
					this.SendPropertyChanged("Dain");
					this.OnDainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MadinFrgn", DbType="Float")]
		public System.Nullable<double> MadinFrgn
		{
			get
			{
				return this._MadinFrgn;
			}
			set
			{
				if ((this._MadinFrgn != value))
				{
					this.OnMadinFrgnChanging(value);
					this.SendPropertyChanging();
					this._MadinFrgn = value;
					this.SendPropertyChanged("MadinFrgn");
					this.OnMadinFrgnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DainFrgn", DbType="Float")]
		public System.Nullable<double> DainFrgn
		{
			get
			{
				return this._DainFrgn;
			}
			set
			{
				if ((this._DainFrgn != value))
				{
					this.OnDainFrgnChanging(value);
					this.SendPropertyChanging();
					this._DainFrgn = value;
					this.SendPropertyChanged("DainFrgn");
					this.OnDainFrgnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="TinyInt")]
		public System.Nullable<byte> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurChange", DbType="SmallInt")]
		public System.Nullable<short> CurChange
		{
			get
			{
				return this._CurChange;
			}
			set
			{
				if ((this._CurChange != value))
				{
					this.OnCurChangeChanging(value);
					this.SendPropertyChanging();
					this._CurChange = value;
					this.SendPropertyChanged("CurChange");
					this.OnCurChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="SmallInt")]
		public System.Nullable<short> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntryMain")]
	public partial class EntryMain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _No;
		
		private System.Nullable<byte> _PayMethod;
		
		private System.Nullable<long> _AccNo;
		
		private System.Nullable<int> _RefNo;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _FromToPerson;
		
		private string _Notes;
		
		private double _Amount;
		
		private System.Nullable<byte> _Currency;
		
		private System.Nullable<short> _CurChange;
		
		private System.Nullable<short> _BranchID;
		
		private System.Nullable<short> _UserID;
		
		private byte _Status;
		
		private bool _SendToserver;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnPayMethodChanging(System.Nullable<byte> value);
    partial void OnPayMethodChanged();
    partial void OnAccNoChanging(System.Nullable<long> value);
    partial void OnAccNoChanged();
    partial void OnRefNoChanging(System.Nullable<int> value);
    partial void OnRefNoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnFromToPersonChanging(string value);
    partial void OnFromToPersonChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(System.Nullable<byte> value);
    partial void OnCurrencyChanged();
    partial void OnCurChangeChanging(System.Nullable<short> value);
    partial void OnCurChangeChanged();
    partial void OnBranchIDChanging(System.Nullable<short> value);
    partial void OnBranchIDChanged();
    partial void OnUserIDChanging(System.Nullable<short> value);
    partial void OnUserIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnSendToserverChanging(bool value);
    partial void OnSendToserverChanged();
    #endregion
		
		public EntryMain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMethod", DbType="TinyInt")]
		public System.Nullable<byte> PayMethod
		{
			get
			{
				return this._PayMethod;
			}
			set
			{
				if ((this._PayMethod != value))
				{
					this.OnPayMethodChanging(value);
					this.SendPropertyChanging();
					this._PayMethod = value;
					this.SendPropertyChanged("PayMethod");
					this.OnPayMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="BigInt")]
		public System.Nullable<long> AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefNo", DbType="Int")]
		public System.Nullable<int> RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromToPerson", DbType="NVarChar(MAX)")]
		public string FromToPerson
		{
			get
			{
				return this._FromToPerson;
			}
			set
			{
				if ((this._FromToPerson != value))
				{
					this.OnFromToPersonChanging(value);
					this.SendPropertyChanging();
					this._FromToPerson = value;
					this.SendPropertyChanged("FromToPerson");
					this.OnFromToPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="TinyInt")]
		public System.Nullable<byte> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurChange", DbType="SmallInt")]
		public System.Nullable<short> CurChange
		{
			get
			{
				return this._CurChange;
			}
			set
			{
				if ((this._CurChange != value))
				{
					this.OnCurChangeChanging(value);
					this.SendPropertyChanging();
					this._CurChange = value;
					this.SendPropertyChanged("CurChange");
					this.OnCurChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="SmallInt")]
		public System.Nullable<short> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="SmallInt")]
		public System.Nullable<short> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToserver", DbType="Bit NOT NULL")]
		public bool SendToserver
		{
			get
			{
				return this._SendToserver;
			}
			set
			{
				if ((this._SendToserver != value))
				{
					this.OnSendToserverChanging(value);
					this.SendPropertyChanging();
					this._SendToserver = value;
					this.SendPropertyChanged("SendToserver");
					this.OnSendToserverChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancialYear")]
	public partial class FinancialYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _DateStart;
		
		private System.DateTime _DateEnd;
		
		private short _BrnId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    partial void OnBrnIdChanging(short value);
    partial void OnBrnIdChanged();
    #endregion
		
		public FinancialYear()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt NOT NULL")]
		public short BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupStr")]
	public partial class GroupStr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _No;
		
		private string _Name;
		
		private long _AccNo;
		
		private byte _Currency;
		
		private System.Nullable<long> _SalesAccNo;
		
		private System.Nullable<long> _CostAccNo;
		
		private System.Nullable<long> _DscntAccNo;
		
		private System.Nullable<long> _SalesRtrnAccNo;
		
		private System.Nullable<long> _CostRtrnAccNo;
		
		private System.Nullable<short> _BrnId;
		
		private byte _Status;
		
		private System.Nullable<long> _PurchaseAccNo;
		
		private System.Nullable<long> _PurchaseRtrnAccNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAccNoChanging(long value);
    partial void OnAccNoChanged();
    partial void OnCurrencyChanging(byte value);
    partial void OnCurrencyChanged();
    partial void OnSalesAccNoChanging(System.Nullable<long> value);
    partial void OnSalesAccNoChanged();
    partial void OnCostAccNoChanging(System.Nullable<long> value);
    partial void OnCostAccNoChanged();
    partial void OnDscntAccNoChanging(System.Nullable<long> value);
    partial void OnDscntAccNoChanged();
    partial void OnSalesRtrnAccNoChanging(System.Nullable<long> value);
    partial void OnSalesRtrnAccNoChanged();
    partial void OnCostRtrnAccNoChanging(System.Nullable<long> value);
    partial void OnCostRtrnAccNoChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnPurchaseAccNoChanging(System.Nullable<long> value);
    partial void OnPurchaseAccNoChanged();
    partial void OnPurchaseRtrnAccNoChanging(System.Nullable<long> value);
    partial void OnPurchaseRtrnAccNoChanged();
    #endregion
		
		public GroupStr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="BigInt NOT NULL")]
		public long AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="TinyInt NOT NULL")]
		public byte Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccNo", DbType="BigInt")]
		public System.Nullable<long> SalesAccNo
		{
			get
			{
				return this._SalesAccNo;
			}
			set
			{
				if ((this._SalesAccNo != value))
				{
					this.OnSalesAccNoChanging(value);
					this.SendPropertyChanging();
					this._SalesAccNo = value;
					this.SendPropertyChanged("SalesAccNo");
					this.OnSalesAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccNo", DbType="BigInt")]
		public System.Nullable<long> CostAccNo
		{
			get
			{
				return this._CostAccNo;
			}
			set
			{
				if ((this._CostAccNo != value))
				{
					this.OnCostAccNoChanging(value);
					this.SendPropertyChanging();
					this._CostAccNo = value;
					this.SendPropertyChanged("CostAccNo");
					this.OnCostAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DscntAccNo", DbType="BigInt")]
		public System.Nullable<long> DscntAccNo
		{
			get
			{
				return this._DscntAccNo;
			}
			set
			{
				if ((this._DscntAccNo != value))
				{
					this.OnDscntAccNoChanging(value);
					this.SendPropertyChanging();
					this._DscntAccNo = value;
					this.SendPropertyChanged("DscntAccNo");
					this.OnDscntAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesRtrnAccNo", DbType="BigInt")]
		public System.Nullable<long> SalesRtrnAccNo
		{
			get
			{
				return this._SalesRtrnAccNo;
			}
			set
			{
				if ((this._SalesRtrnAccNo != value))
				{
					this.OnSalesRtrnAccNoChanging(value);
					this.SendPropertyChanging();
					this._SalesRtrnAccNo = value;
					this.SendPropertyChanged("SalesRtrnAccNo");
					this.OnSalesRtrnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostRtrnAccNo", DbType="BigInt")]
		public System.Nullable<long> CostRtrnAccNo
		{
			get
			{
				return this._CostRtrnAccNo;
			}
			set
			{
				if ((this._CostRtrnAccNo != value))
				{
					this.OnCostRtrnAccNoChanging(value);
					this.SendPropertyChanging();
					this._CostRtrnAccNo = value;
					this.SendPropertyChanged("CostRtrnAccNo");
					this.OnCostRtrnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseAccNo", DbType="BigInt")]
		public System.Nullable<long> PurchaseAccNo
		{
			get
			{
				return this._PurchaseAccNo;
			}
			set
			{
				if ((this._PurchaseAccNo != value))
				{
					this.OnPurchaseAccNoChanging(value);
					this.SendPropertyChanging();
					this._PurchaseAccNo = value;
					this.SendPropertyChanged("PurchaseAccNo");
					this.OnPurchaseAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseRtrnAccNo", DbType="BigInt")]
		public System.Nullable<long> PurchaseRtrnAccNo
		{
			get
			{
				return this._PurchaseRtrnAccNo;
			}
			set
			{
				if ((this._PurchaseRtrnAccNo != value))
				{
					this.OnPurchaseRtrnAccNoChanging(value);
					this.SendPropertyChanging();
					this._PurchaseRtrnAccNo = value;
					this.SendPropertyChanged("PurchaseRtrnAccNo");
					this.OnPurchaseRtrnAccNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notification")]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CusSupId;
		
		private System.Nullable<int> _DocNo;
		
		private string _Notes;
		
		private double _Madin;
		
		private double _Dain;
		
		private System.DateTime _Date;
		
		private short _UsrId;
		
		private short _BrnId;
		
		private bool _IsComplete;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCusSupIdChanging(int value);
    partial void OnCusSupIdChanged();
    partial void OnDocNoChanging(System.Nullable<int> value);
    partial void OnDocNoChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnMadinChanging(double value);
    partial void OnMadinChanged();
    partial void OnDainChanging(double value);
    partial void OnDainChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnUsrIdChanging(short value);
    partial void OnUsrIdChanged();
    partial void OnBrnIdChanging(short value);
    partial void OnBrnIdChanged();
    partial void OnIsCompleteChanging(bool value);
    partial void OnIsCompleteChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Notification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusSupId", DbType="Int NOT NULL")]
		public int CusSupId
		{
			get
			{
				return this._CusSupId;
			}
			set
			{
				if ((this._CusSupId != value))
				{
					this.OnCusSupIdChanging(value);
					this.SendPropertyChanging();
					this._CusSupId = value;
					this.SendPropertyChanged("CusSupId");
					this.OnCusSupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNo", DbType="Int")]
		public System.Nullable<int> DocNo
		{
			get
			{
				return this._DocNo;
			}
			set
			{
				if ((this._DocNo != value))
				{
					this.OnDocNoChanging(value);
					this.SendPropertyChanging();
					this._DocNo = value;
					this.SendPropertyChanged("DocNo");
					this.OnDocNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Madin", DbType="Float NOT NULL")]
		public double Madin
		{
			get
			{
				return this._Madin;
			}
			set
			{
				if ((this._Madin != value))
				{
					this.OnMadinChanging(value);
					this.SendPropertyChanging();
					this._Madin = value;
					this.SendPropertyChanged("Madin");
					this.OnMadinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dain", DbType="Float NOT NULL")]
		public double Dain
		{
			get
			{
				return this._Dain;
			}
			set
			{
				if ((this._Dain != value))
				{
					this.OnDainChanging(value);
					this.SendPropertyChanging();
					this._Dain = value;
					this.SendPropertyChanged("Dain");
					this.OnDainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrId", DbType="SmallInt NOT NULL")]
		public short UsrId
		{
			get
			{
				return this._UsrId;
			}
			set
			{
				if ((this._UsrId != value))
				{
					this.OnUsrIdChanging(value);
					this.SendPropertyChanging();
					this._UsrId = value;
					this.SendPropertyChanged("UsrId");
					this.OnUsrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt NOT NULL")]
		public short BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplete", DbType="Bit NOT NULL")]
		public bool IsComplete
		{
			get
			{
				return this._IsComplete;
			}
			set
			{
				if ((this._IsComplete != value))
				{
					this.OnIsCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsComplete = value;
					this.SendPropertyChanged("IsComplete");
					this.OnIsCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductColor")]
	public partial class ProductColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private short _Quan;
		
		private string _Html;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnQuanChanging(short value);
    partial void OnQuanChanged();
    partial void OnHtmlChanging(string value);
    partial void OnHtmlChanged();
    #endregion
		
		public ProductColor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quan", DbType="SmallInt NOT NULL")]
		public short Quan
		{
			get
			{
				return this._Quan;
			}
			set
			{
				if ((this._Quan != value))
				{
					this.OnQuanChanging(value);
					this.SendPropertyChanging();
					this._Quan = value;
					this.SendPropertyChanged("Quan");
					this.OnQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Html", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Html
		{
			get
			{
				return this._Html;
			}
			set
			{
				if ((this._Html != value))
				{
					this.OnHtmlChanging(value);
					this.SendPropertyChanging();
					this._Html = value;
					this.SendPropertyChanged("Html");
					this.OnHtmlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductQunatity")]
	public partial class ProductQunatity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _prdId;
		
		private System.Nullable<double> _Quantity;
		
		private System.Nullable<double> _SubQuantity;
		
		private System.Nullable<double> _SubQuantity3;
		
		private System.Nullable<short> _StrId;
		
		private System.Nullable<short> _BrnId;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnprdIdChanging(int value);
    partial void OnprdIdChanged();
    partial void OnQuantityChanging(System.Nullable<double> value);
    partial void OnQuantityChanged();
    partial void OnSubQuantityChanging(System.Nullable<double> value);
    partial void OnSubQuantityChanged();
    partial void OnSubQuantity3Changing(System.Nullable<double> value);
    partial void OnSubQuantity3Changed();
    partial void OnStrIdChanging(System.Nullable<short> value);
    partial void OnStrIdChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ProductQunatity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prdId", DbType="Int NOT NULL")]
		public int prdId
		{
			get
			{
				return this._prdId;
			}
			set
			{
				if ((this._prdId != value))
				{
					this.OnprdIdChanging(value);
					this.SendPropertyChanging();
					this._prdId = value;
					this.SendPropertyChanged("prdId");
					this.OnprdIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubQuantity", DbType="Float")]
		public System.Nullable<double> SubQuantity
		{
			get
			{
				return this._SubQuantity;
			}
			set
			{
				if ((this._SubQuantity != value))
				{
					this.OnSubQuantityChanging(value);
					this.SendPropertyChanging();
					this._SubQuantity = value;
					this.SendPropertyChanged("SubQuantity");
					this.OnSubQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubQuantity3", DbType="Float")]
		public System.Nullable<double> SubQuantity3
		{
			get
			{
				return this._SubQuantity3;
			}
			set
			{
				if ((this._SubQuantity3 != value))
				{
					this.OnSubQuantity3Changing(value);
					this.SendPropertyChanging();
					this._SubQuantity3 = value;
					this.SendPropertyChanged("SubQuantity3");
					this.OnSubQuantity3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrId", DbType="SmallInt")]
		public System.Nullable<short> StrId
		{
			get
			{
				return this._StrId;
			}
			set
			{
				if ((this._StrId != value))
				{
					this.OnStrIdChanging(value);
					this.SendPropertyChanging();
					this._StrId = value;
					this.SendPropertyChanged("StrId");
					this.OnStrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleTbl")]
	public partial class RoleTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Name;
		
		private System.Nullable<byte> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public RoleTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreTbl")]
	public partial class StoreTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private short _No;
		
		private string _Name;
		
		private string _PhnNo;
		
		private System.Nullable<short> _BrnId;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNoChanging(short value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhnNoChanging(string value);
    partial void OnPhnNoChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public StoreTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="SmallInt NOT NULL")]
		public short No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhnNo", DbType="NVarChar(MAX)")]
		public string PhnNo
		{
			get
			{
				return this._PhnNo;
			}
			set
			{
				if ((this._PhnNo != value))
				{
					this.OnPhnNoChanging(value);
					this.SendPropertyChanging();
					this._PhnNo = value;
					this.SendPropertyChanged("PhnNo");
					this.OnPhnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplySub")]
	public partial class SupplySub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ParentID;
		
		private string _Desc;
		
		private string _PrdBarcode;
		
		private System.Nullable<int> _PrdId;
		
		private System.Nullable<int> _Msur;
		
		private byte _Currency;
		
		private double _QuanMain;
		
		private double _BuyPrice;
		
		private double _SalePrice;
		
		private double _TaxPercent;
		
		private double _TaxPrice;
		
		private double _DscntPercent;
		
		private double _DscntAmount;
		
		private double _Total;
		
		private System.Nullable<double> _TotalFrgn;
		
		private System.DateTime _Date;
		
		private System.Nullable<short> _BrnId;
		
		private System.Nullable<short> _UserId;
		
		private byte _Status;
		
		private bool _PrdManufacture;
		
		private System.Nullable<double> _QteMeter;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Width;
		
		private System.Nullable<int> _NoPacks;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private System.Nullable<double> _Overtime;
		
		private System.Nullable<double> _Workingtime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnPrdBarcodeChanging(string value);
    partial void OnPrdBarcodeChanged();
    partial void OnPrdIdChanging(System.Nullable<int> value);
    partial void OnPrdIdChanged();
    partial void OnMsurChanging(System.Nullable<int> value);
    partial void OnMsurChanged();
    partial void OnCurrencyChanging(byte value);
    partial void OnCurrencyChanged();
    partial void OnQuanMainChanging(double value);
    partial void OnQuanMainChanged();
    partial void OnBuyPriceChanging(double value);
    partial void OnBuyPriceChanged();
    partial void OnSalePriceChanging(double value);
    partial void OnSalePriceChanged();
    partial void OnTaxPercentChanging(double value);
    partial void OnTaxPercentChanged();
    partial void OnTaxPriceChanging(double value);
    partial void OnTaxPriceChanged();
    partial void OnDscntPercentChanging(double value);
    partial void OnDscntPercentChanged();
    partial void OnDscntAmountChanging(double value);
    partial void OnDscntAmountChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnTotalFrgnChanging(System.Nullable<double> value);
    partial void OnTotalFrgnChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnUserIdChanging(System.Nullable<short> value);
    partial void OnUserIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnPrdManufactureChanging(bool value);
    partial void OnPrdManufactureChanged();
    partial void OnQteMeterChanging(System.Nullable<double> value);
    partial void OnQteMeterChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnWidthChanging(System.Nullable<double> value);
    partial void OnWidthChanged();
    partial void OnNoPacksChanging(System.Nullable<int> value);
    partial void OnNoPacksChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnOvertimeChanging(System.Nullable<double> value);
    partial void OnOvertimeChanged();
    partial void OnWorkingtimeChanging(System.Nullable<double> value);
    partial void OnWorkingtimeChanged();
    #endregion
		
		public SupplySub()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(MAX)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrdBarcode", DbType="NVarChar(MAX)")]
		public string PrdBarcode
		{
			get
			{
				return this._PrdBarcode;
			}
			set
			{
				if ((this._PrdBarcode != value))
				{
					this.OnPrdBarcodeChanging(value);
					this.SendPropertyChanging();
					this._PrdBarcode = value;
					this.SendPropertyChanged("PrdBarcode");
					this.OnPrdBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrdId", DbType="Int")]
		public System.Nullable<int> PrdId
		{
			get
			{
				return this._PrdId;
			}
			set
			{
				if ((this._PrdId != value))
				{
					this.OnPrdIdChanging(value);
					this.SendPropertyChanging();
					this._PrdId = value;
					this.SendPropertyChanged("PrdId");
					this.OnPrdIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Msur", DbType="Int")]
		public System.Nullable<int> Msur
		{
			get
			{
				return this._Msur;
			}
			set
			{
				if ((this._Msur != value))
				{
					this.OnMsurChanging(value);
					this.SendPropertyChanging();
					this._Msur = value;
					this.SendPropertyChanged("Msur");
					this.OnMsurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="TinyInt NOT NULL")]
		public byte Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanMain", DbType="Float NOT NULL")]
		public double QuanMain
		{
			get
			{
				return this._QuanMain;
			}
			set
			{
				if ((this._QuanMain != value))
				{
					this.OnQuanMainChanging(value);
					this.SendPropertyChanging();
					this._QuanMain = value;
					this.SendPropertyChanged("QuanMain");
					this.OnQuanMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyPrice", DbType="Float NOT NULL")]
		public double BuyPrice
		{
			get
			{
				return this._BuyPrice;
			}
			set
			{
				if ((this._BuyPrice != value))
				{
					this.OnBuyPriceChanging(value);
					this.SendPropertyChanging();
					this._BuyPrice = value;
					this.SendPropertyChanged("BuyPrice");
					this.OnBuyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Float NOT NULL")]
		public double SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercent", DbType="Float NOT NULL")]
		public double TaxPercent
		{
			get
			{
				return this._TaxPercent;
			}
			set
			{
				if ((this._TaxPercent != value))
				{
					this.OnTaxPercentChanging(value);
					this.SendPropertyChanging();
					this._TaxPercent = value;
					this.SendPropertyChanged("TaxPercent");
					this.OnTaxPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPrice", DbType="Float NOT NULL")]
		public double TaxPrice
		{
			get
			{
				return this._TaxPrice;
			}
			set
			{
				if ((this._TaxPrice != value))
				{
					this.OnTaxPriceChanging(value);
					this.SendPropertyChanging();
					this._TaxPrice = value;
					this.SendPropertyChanged("TaxPrice");
					this.OnTaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DscntPercent", DbType="Float NOT NULL")]
		public double DscntPercent
		{
			get
			{
				return this._DscntPercent;
			}
			set
			{
				if ((this._DscntPercent != value))
				{
					this.OnDscntPercentChanging(value);
					this.SendPropertyChanging();
					this._DscntPercent = value;
					this.SendPropertyChanged("DscntPercent");
					this.OnDscntPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DscntAmount", DbType="Float NOT NULL")]
		public double DscntAmount
		{
			get
			{
				return this._DscntAmount;
			}
			set
			{
				if ((this._DscntAmount != value))
				{
					this.OnDscntAmountChanging(value);
					this.SendPropertyChanging();
					this._DscntAmount = value;
					this.SendPropertyChanged("DscntAmount");
					this.OnDscntAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
		public double Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFrgn", DbType="Float")]
		public System.Nullable<double> TotalFrgn
		{
			get
			{
				return this._TotalFrgn;
			}
			set
			{
				if ((this._TotalFrgn != value))
				{
					this.OnTotalFrgnChanging(value);
					this.SendPropertyChanging();
					this._TotalFrgn = value;
					this.SendPropertyChanged("TotalFrgn");
					this.OnTotalFrgnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="SmallInt")]
		public System.Nullable<short> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrdManufacture", DbType="Bit NOT NULL")]
		public bool PrdManufacture
		{
			get
			{
				return this._PrdManufacture;
			}
			set
			{
				if ((this._PrdManufacture != value))
				{
					this.OnPrdManufactureChanging(value);
					this.SendPropertyChanging();
					this._PrdManufacture = value;
					this.SendPropertyChanged("PrdManufacture");
					this.OnPrdManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QteMeter", DbType="Float")]
		public System.Nullable<double> QteMeter
		{
			get
			{
				return this._QteMeter;
			}
			set
			{
				if ((this._QteMeter != value))
				{
					this.OnQteMeterChanging(value);
					this.SendPropertyChanging();
					this._QteMeter = value;
					this.SendPropertyChanged("QteMeter");
					this.OnQteMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Float")]
		public System.Nullable<double> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoPacks", DbType="Int")]
		public System.Nullable<int> NoPacks
		{
			get
			{
				return this._NoPacks;
			}
			set
			{
				if ((this._NoPacks != value))
				{
					this.OnNoPacksChanging(value);
					this.SendPropertyChanging();
					this._NoPacks = value;
					this.SendPropertyChanged("NoPacks");
					this.OnNoPacksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overtime", DbType="Float")]
		public System.Nullable<double> Overtime
		{
			get
			{
				return this._Overtime;
			}
			set
			{
				if ((this._Overtime != value))
				{
					this.OnOvertimeChanging(value);
					this.SendPropertyChanging();
					this._Overtime = value;
					this.SendPropertyChanged("Overtime");
					this.OnOvertimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Workingtime", DbType="Float")]
		public System.Nullable<double> Workingtime
		{
			get
			{
				return this._Workingtime;
			}
			set
			{
				if ((this._Workingtime != value))
				{
					this.OnWorkingtimeChanging(value);
					this.SendPropertyChanging();
					this._Workingtime = value;
					this.SendPropertyChanged("Workingtime");
					this.OnWorkingtimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserBranchTbl")]
	public partial class UserBranchTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private short _UserId;
		
		private short _BrnId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnUserIdChanging(short value);
    partial void OnUserIdChanged();
    partial void OnBrnIdChanging(short value);
    partial void OnBrnIdChanged();
    #endregion
		
		public UserBranchTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="SmallInt NOT NULL")]
		public short UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt NOT NULL")]
		public short BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTbl")]
	public partial class UserTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Name;
		
		private string _Pass;
		
		private System.Nullable<int> _UsSettProfID;
		
		private System.Nullable<short> _RoleID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnUsSettProfIDChanging(System.Nullable<int> value);
    partial void OnUsSettProfIDChanged();
    partial void OnRoleIDChanging(System.Nullable<short> value);
    partial void OnRoleIDChanged();
    #endregion
		
		public UserTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(MAX)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsSettProfID", DbType="Int")]
		public System.Nullable<int> UsSettProfID
		{
			get
			{
				return this._UsSettProfID;
			}
			set
			{
				if ((this._UsSettProfID != value))
				{
					this.OnUsSettProfIDChanging(value);
					this.SendPropertyChanging();
					this._UsSettProfID = value;
					this.SendPropertyChanged("UsSettProfID");
					this.OnUsSettProfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="SmallInt")]
		public System.Nullable<short> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrdMeasurment")]
	public partial class PrdMeasurment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<double> _SalePrice;
		
		private System.Nullable<double> _MinSalePrice;
		
		private System.Nullable<double> _RetailPrice;
		
		private System.Nullable<double> _BatchPrice;
		
		private System.Nullable<double> _Conversion;
		
		private bool _Default;
		
		private int _PrdId;
		
		private bool _Weight;
		
		private System.Nullable<short> _BrnId;
		
		private byte _Status;
		
		private bool _Manufacture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnSalePriceChanging(System.Nullable<double> value);
    partial void OnSalePriceChanged();
    partial void OnMinSalePriceChanging(System.Nullable<double> value);
    partial void OnMinSalePriceChanged();
    partial void OnRetailPriceChanging(System.Nullable<double> value);
    partial void OnRetailPriceChanged();
    partial void OnBatchPriceChanging(System.Nullable<double> value);
    partial void OnBatchPriceChanged();
    partial void OnConversionChanging(System.Nullable<double> value);
    partial void OnConversionChanged();
    partial void OnDefaultChanging(bool value);
    partial void OnDefaultChanged();
    partial void OnPrdIdChanging(int value);
    partial void OnPrdIdChanged();
    partial void OnWeightChanging(bool value);
    partial void OnWeightChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnManufactureChanging(bool value);
    partial void OnManufactureChanged();
    #endregion
		
		public PrdMeasurment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Float")]
		public System.Nullable<double> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinSalePrice", DbType="Float")]
		public System.Nullable<double> MinSalePrice
		{
			get
			{
				return this._MinSalePrice;
			}
			set
			{
				if ((this._MinSalePrice != value))
				{
					this.OnMinSalePriceChanging(value);
					this.SendPropertyChanging();
					this._MinSalePrice = value;
					this.SendPropertyChanged("MinSalePrice");
					this.OnMinSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetailPrice", DbType="Float")]
		public System.Nullable<double> RetailPrice
		{
			get
			{
				return this._RetailPrice;
			}
			set
			{
				if ((this._RetailPrice != value))
				{
					this.OnRetailPriceChanging(value);
					this.SendPropertyChanging();
					this._RetailPrice = value;
					this.SendPropertyChanged("RetailPrice");
					this.OnRetailPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchPrice", DbType="Float")]
		public System.Nullable<double> BatchPrice
		{
			get
			{
				return this._BatchPrice;
			}
			set
			{
				if ((this._BatchPrice != value))
				{
					this.OnBatchPriceChanging(value);
					this.SendPropertyChanging();
					this._BatchPrice = value;
					this.SendPropertyChanged("BatchPrice");
					this.OnBatchPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conversion", DbType="Float")]
		public System.Nullable<double> Conversion
		{
			get
			{
				return this._Conversion;
			}
			set
			{
				if ((this._Conversion != value))
				{
					this.OnConversionChanging(value);
					this.SendPropertyChanging();
					this._Conversion = value;
					this.SendPropertyChanged("Conversion");
					this.OnConversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Default]", Storage="_Default", DbType="Bit NOT NULL")]
		public bool Default
		{
			get
			{
				return this._Default;
			}
			set
			{
				if ((this._Default != value))
				{
					this.OnDefaultChanging(value);
					this.SendPropertyChanging();
					this._Default = value;
					this.SendPropertyChanged("Default");
					this.OnDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrdId", DbType="Int NOT NULL")]
		public int PrdId
		{
			get
			{
				return this._PrdId;
			}
			set
			{
				if ((this._PrdId != value))
				{
					this.OnPrdIdChanging(value);
					this.SendPropertyChanging();
					this._PrdId = value;
					this.SendPropertyChanged("PrdId");
					this.OnPrdIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Bit NOT NULL")]
		public bool Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacture", DbType="Bit NOT NULL")]
		public bool Manufacture
		{
			get
			{
				return this._Manufacture;
			}
			set
			{
				if ((this._Manufacture != value))
				{
					this.OnManufactureChanging(value);
					this.SendPropertyChanging();
					this._Manufacture = value;
					this.SendPropertyChanged("Manufacture");
					this.OnManufactureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _No;
		
		private string _Name;
		
		private string _NameEng;
		
		private int _GrpNo;
		
		private string _Desc;
		
		private bool _SaleTax;
		
		private System.Nullable<short> _BrnId;
		
		private byte _Status;
		
		private bool _PriceTax;
		
		private double _ReorderLevel;
		
		private double _MaxLevel;
		
		private bool _PurchaseTax;
		
		private bool _Suspended;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameEngChanging(string value);
    partial void OnNameEngChanged();
    partial void OnGrpNoChanging(int value);
    partial void OnGrpNoChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnSaleTaxChanging(bool value);
    partial void OnSaleTaxChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnPriceTaxChanging(bool value);
    partial void OnPriceTaxChanged();
    partial void OnReorderLevelChanging(double value);
    partial void OnReorderLevelChanged();
    partial void OnMaxLevelChanging(double value);
    partial void OnMaxLevelChanged();
    partial void OnPurchaseTaxChanging(bool value);
    partial void OnPurchaseTaxChanged();
    partial void OnSuspendedChanging(bool value);
    partial void OnSuspendedChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEng", DbType="NVarChar(MAX)")]
		public string NameEng
		{
			get
			{
				return this._NameEng;
			}
			set
			{
				if ((this._NameEng != value))
				{
					this.OnNameEngChanging(value);
					this.SendPropertyChanging();
					this._NameEng = value;
					this.SendPropertyChanged("NameEng");
					this.OnNameEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrpNo", DbType="Int NOT NULL")]
		public int GrpNo
		{
			get
			{
				return this._GrpNo;
			}
			set
			{
				if ((this._GrpNo != value))
				{
					this.OnGrpNoChanging(value);
					this.SendPropertyChanging();
					this._GrpNo = value;
					this.SendPropertyChanged("GrpNo");
					this.OnGrpNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(MAX)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleTax", DbType="Bit NOT NULL")]
		public bool SaleTax
		{
			get
			{
				return this._SaleTax;
			}
			set
			{
				if ((this._SaleTax != value))
				{
					this.OnSaleTaxChanging(value);
					this.SendPropertyChanging();
					this._SaleTax = value;
					this.SendPropertyChanged("SaleTax");
					this.OnSaleTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTax", DbType="Bit NOT NULL")]
		public bool PriceTax
		{
			get
			{
				return this._PriceTax;
			}
			set
			{
				if ((this._PriceTax != value))
				{
					this.OnPriceTaxChanging(value);
					this.SendPropertyChanging();
					this._PriceTax = value;
					this.SendPropertyChanged("PriceTax");
					this.OnPriceTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderLevel", DbType="Float NOT NULL")]
		public double ReorderLevel
		{
			get
			{
				return this._ReorderLevel;
			}
			set
			{
				if ((this._ReorderLevel != value))
				{
					this.OnReorderLevelChanging(value);
					this.SendPropertyChanging();
					this._ReorderLevel = value;
					this.SendPropertyChanged("ReorderLevel");
					this.OnReorderLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLevel", DbType="Float NOT NULL")]
		public double MaxLevel
		{
			get
			{
				return this._MaxLevel;
			}
			set
			{
				if ((this._MaxLevel != value))
				{
					this.OnMaxLevelChanging(value);
					this.SendPropertyChanging();
					this._MaxLevel = value;
					this.SendPropertyChanged("MaxLevel");
					this.OnMaxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseTax", DbType="Bit NOT NULL")]
		public bool PurchaseTax
		{
			get
			{
				return this._PurchaseTax;
			}
			set
			{
				if ((this._PurchaseTax != value))
				{
					this.OnPurchaseTaxChanging(value);
					this.SendPropertyChanging();
					this._PurchaseTax = value;
					this.SendPropertyChanged("PurchaseTax");
					this.OnPurchaseTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suspended", DbType="Bit NOT NULL")]
		public bool Suspended
		{
			get
			{
				return this._Suspended;
			}
			set
			{
				if ((this._Suspended != value))
				{
					this.OnSuspendedChanging(value);
					this.SendPropertyChanging();
					this._Suspended = value;
					this.SendPropertyChanged("Suspended");
					this.OnSuspendedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrdExpirateDetail")]
	public partial class PrdExpirateDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ParentID;
		
		private int _ProductID;
		
		private int _MsurID;
		
		private short _StoreID;
		
		private double _Price;
		
		private double _Quantity;
		
		private System.DateTime _Date;
		
		private System.DateTime _ExpDate;
		
		private short _BranchID;
		
		private byte _Status;
		
		private string _PrdBarcode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnMsurIDChanging(int value);
    partial void OnMsurIDChanged();
    partial void OnStoreIDChanging(short value);
    partial void OnStoreIDChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnExpDateChanging(System.DateTime value);
    partial void OnExpDateChanged();
    partial void OnBranchIDChanging(short value);
    partial void OnBranchIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnPrdBarcodeChanging(string value);
    partial void OnPrdBarcodeChanged();
    #endregion
		
		public PrdExpirateDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsurID", DbType="Int NOT NULL")]
		public int MsurID
		{
			get
			{
				return this._MsurID;
			}
			set
			{
				if ((this._MsurID != value))
				{
					this.OnMsurIDChanging(value);
					this.SendPropertyChanging();
					this._MsurID = value;
					this.SendPropertyChanged("MsurID");
					this.OnMsurIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="SmallInt NOT NULL")]
		public short StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
		public double Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="Date NOT NULL")]
		public System.DateTime ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this.OnExpDateChanging(value);
					this.SendPropertyChanging();
					this._ExpDate = value;
					this.SendPropertyChanged("ExpDate");
					this.OnExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="SmallInt NOT NULL")]
		public short BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrdBarcode", DbType="NVarChar(MAX)")]
		public string PrdBarcode
		{
			get
			{
				return this._PrdBarcode;
			}
			set
			{
				if ((this._PrdBarcode != value))
				{
					this.OnPrdBarcodeChanging(value);
					this.SendPropertyChanging();
					this._PrdBarcode = value;
					this.SendPropertyChanged("PrdBarcode");
					this.OnPrdBarcodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrdExpirateMain")]
	public partial class PrdExpirateMain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private short _StorID;
		
		private System.DateTime _Date;
		
		private short _BranchID;
		
		private System.Nullable<short> _UserID;
		
		private bool _SendToserver;
		
		private string _No;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStorIDChanging(short value);
    partial void OnStorIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnBranchIDChanging(short value);
    partial void OnBranchIDChanged();
    partial void OnUserIDChanging(System.Nullable<short> value);
    partial void OnUserIDChanged();
    partial void OnSendToserverChanging(bool value);
    partial void OnSendToserverChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    #endregion
		
		public PrdExpirateMain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorID", DbType="SmallInt NOT NULL")]
		public short StorID
		{
			get
			{
				return this._StorID;
			}
			set
			{
				if ((this._StorID != value))
				{
					this.OnStorIDChanging(value);
					this.SendPropertyChanging();
					this._StorID = value;
					this.SendPropertyChanged("StorID");
					this.OnStorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="SmallInt NOT NULL")]
		public short BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="SmallInt")]
		public System.Nullable<short> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToserver", DbType="Bit NOT NULL")]
		public bool SendToserver
		{
			get
			{
				return this._SendToserver;
			}
			set
			{
				if ((this._SendToserver != value))
				{
					this.OnSendToserverChanging(value);
					this.SendPropertyChanging();
					this._SendToserver = value;
					this.SendPropertyChanged("SendToserver");
					this.OnSendToserverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="NVarChar(MAX)")]
		public string No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrdManufacture")]
	public partial class PrdManufacture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PrdId;
		
		private int _PrdSubId;
		
		private int _PrdMsurId;
		
		private double _Quan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPrdIdChanging(int value);
    partial void OnPrdIdChanged();
    partial void OnPrdSubIdChanging(int value);
    partial void OnPrdSubIdChanged();
    partial void OnPrdMsurIdChanging(int value);
    partial void OnPrdMsurIdChanged();
    partial void OnQuanChanging(double value);
    partial void OnQuanChanged();
    #endregion
		
		public PrdManufacture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrdId", DbType="Int NOT NULL")]
		public int PrdId
		{
			get
			{
				return this._PrdId;
			}
			set
			{
				if ((this._PrdId != value))
				{
					this.OnPrdIdChanging(value);
					this.SendPropertyChanging();
					this._PrdId = value;
					this.SendPropertyChanged("PrdId");
					this.OnPrdIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrdSubId", DbType="Int NOT NULL")]
		public int PrdSubId
		{
			get
			{
				return this._PrdSubId;
			}
			set
			{
				if ((this._PrdSubId != value))
				{
					this.OnPrdSubIdChanging(value);
					this.SendPropertyChanging();
					this._PrdSubId = value;
					this.SendPropertyChanged("PrdSubId");
					this.OnPrdSubIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrdMsurId", DbType="Int NOT NULL")]
		public int PrdMsurId
		{
			get
			{
				return this._PrdMsurId;
			}
			set
			{
				if ((this._PrdMsurId != value))
				{
					this.OnPrdMsurIdChanging(value);
					this.SendPropertyChanging();
					this._PrdMsurId = value;
					this.SendPropertyChanged("PrdMsurId");
					this.OnPrdMsurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quan", DbType="Float NOT NULL")]
		public double Quan
		{
			get
			{
				return this._Quan;
			}
			set
			{
				if ((this._Quan != value))
				{
					this.OnQuanChanging(value);
					this.SendPropertyChanging();
					this._Quan = value;
					this.SendPropertyChanged("Quan");
					this.OnQuanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserControlTbl")]
	public partial class UserControlTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _No;
		
		private string _Name;
		
		private string _Caption;
		
		private string _CaptionEn;
		
		private EntitySet<ControlTbl> _ControlTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(byte value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnCaptionEnChanging(string value);
    partial void OnCaptionEnChanged();
    #endregion
		
		public UserControlTbl()
		{
			this._ControlTbls = new EntitySet<ControlTbl>(new Action<ControlTbl>(this.attach_ControlTbls), new Action<ControlTbl>(this.detach_ControlTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaptionEn", DbType="NVarChar(MAX)")]
		public string CaptionEn
		{
			get
			{
				return this._CaptionEn;
			}
			set
			{
				if ((this._CaptionEn != value))
				{
					this.OnCaptionEnChanging(value);
					this.SendPropertyChanging();
					this._CaptionEn = value;
					this.SendPropertyChanged("CaptionEn");
					this.OnCaptionEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserControlTbl_ControlTbl", Storage="_ControlTbls", ThisKey="No", OtherKey="No")]
		public EntitySet<ControlTbl> ControlTbls
		{
			get
			{
				return this._ControlTbls;
			}
			set
			{
				this._ControlTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ControlTbls(ControlTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserControlTbl = this;
		}
		
		private void detach_ControlTbls(ControlTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserControlTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleControlTbl")]
	public partial class RoleControlTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private short _RoleId;
		
		private byte _No;
		
		private short _ControlId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnRoleIdChanging(short value);
    partial void OnRoleIdChanged();
    partial void OnNoChanging(byte value);
    partial void OnNoChanged();
    partial void OnControlIdChanging(short value);
    partial void OnControlIdChanged();
    #endregion
		
		public RoleControlTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="SmallInt NOT NULL")]
		public short RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="TinyInt NOT NULL")]
		public byte No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlId", DbType="SmallInt NOT NULL")]
		public short ControlId
		{
			get
			{
				return this._ControlId;
			}
			set
			{
				if ((this._ControlId != value))
				{
					this.OnControlIdChanging(value);
					this.SendPropertyChanging();
					this._ControlId = value;
					this.SendPropertyChanged("ControlId");
					this.OnControlIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ControlTbl")]
	public partial class ControlTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private byte _No;
		
		private short _ControlDataID;
		
		private EntityRef<UserControlTbl> _UserControlTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNoChanging(byte value);
    partial void OnNoChanged();
    partial void OnControlDataIDChanging(short value);
    partial void OnControlDataIDChanged();
    #endregion
		
		public ControlTbl()
		{
			this._UserControlTbl = default(EntityRef<UserControlTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="TinyInt NOT NULL")]
		public byte No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					if (this._UserControlTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlDataID", DbType="SmallInt NOT NULL")]
		public short ControlDataID
		{
			get
			{
				return this._ControlDataID;
			}
			set
			{
				if ((this._ControlDataID != value))
				{
					this.OnControlDataIDChanging(value);
					this.SendPropertyChanging();
					this._ControlDataID = value;
					this.SendPropertyChanged("ControlDataID");
					this.OnControlDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserControlTbl_ControlTbl", Storage="_UserControlTbl", ThisKey="No", OtherKey="No", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserControlTbl UserControlTbl
		{
			get
			{
				return this._UserControlTbl.Entity;
			}
			set
			{
				UserControlTbl previousValue = this._UserControlTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserControlTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserControlTbl.Entity = null;
						previousValue.ControlTbls.Remove(this);
					}
					this._UserControlTbl.Entity = value;
					if ((value != null))
					{
						value.ControlTbls.Add(this);
						this._No = value.No;
					}
					else
					{
						this._No = default(byte);
					}
					this.SendPropertyChanged("UserControlTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ControlData")]
	public partial class ControlData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Name;
		
		private string _Caption;
		
		private string _CaptionEn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnCaptionEnChanging(string value);
    partial void OnCaptionEnChanged();
    #endregion
		
		public ControlData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaptionEn", DbType="NVarChar(MAX)")]
		public string CaptionEn
		{
			get
			{
				return this._CaptionEn;
			}
			set
			{
				if ((this._CaptionEn != value))
				{
					this.OnCaptionEnChanging(value);
					this.SendPropertyChanging();
					this._CaptionEn = value;
					this.SendPropertyChanged("CaptionEn");
					this.OnCaptionEnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrawerPeriod")]
	public partial class DrawerPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PeriodStart;
		
		private System.Nullable<System.DateTime> _PeriodEnd;
		
		private double _OpeningBalance;
		
		private double _ClosingBalance;
		
		private double _ActualBalance;
		
		private System.Nullable<int> _DifferenceAccountID;
		
		private short _PeriodUserID;
		
		private System.Nullable<short> _ClosingPeriodUserID;
		
		private short _DrawerID;
		
		private System.Nullable<short> _ClosingDrwerID;
		
		private double _TransferdBalance;
		
		private double _RemainingBalance;
		
		private short _BranchID;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<double> _AmountBank;
		
		private bool _SendToserver;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPeriodStartChanging(System.DateTime value);
    partial void OnPeriodStartChanged();
    partial void OnPeriodEndChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodEndChanged();
    partial void OnOpeningBalanceChanging(double value);
    partial void OnOpeningBalanceChanged();
    partial void OnClosingBalanceChanging(double value);
    partial void OnClosingBalanceChanged();
    partial void OnActualBalanceChanging(double value);
    partial void OnActualBalanceChanged();
    partial void OnDifferenceAccountIDChanging(System.Nullable<int> value);
    partial void OnDifferenceAccountIDChanged();
    partial void OnPeriodUserIDChanging(short value);
    partial void OnPeriodUserIDChanged();
    partial void OnClosingPeriodUserIDChanging(System.Nullable<short> value);
    partial void OnClosingPeriodUserIDChanged();
    partial void OnDrawerIDChanging(short value);
    partial void OnDrawerIDChanged();
    partial void OnClosingDrwerIDChanging(System.Nullable<short> value);
    partial void OnClosingDrwerIDChanged();
    partial void OnTransferdBalanceChanging(double value);
    partial void OnTransferdBalanceChanged();
    partial void OnRemainingBalanceChanging(double value);
    partial void OnRemainingBalanceChanged();
    partial void OnBranchIDChanging(short value);
    partial void OnBranchIDChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnAmountBankChanging(System.Nullable<double> value);
    partial void OnAmountBankChanged();
    partial void OnSendToserverChanging(bool value);
    partial void OnSendToserverChanged();
    #endregion
		
		public DrawerPeriod()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodStart", DbType="DateTime NOT NULL")]
		public System.DateTime PeriodStart
		{
			get
			{
				return this._PeriodStart;
			}
			set
			{
				if ((this._PeriodStart != value))
				{
					this.OnPeriodStartChanging(value);
					this.SendPropertyChanging();
					this._PeriodStart = value;
					this.SendPropertyChanged("PeriodStart");
					this.OnPeriodStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> PeriodEnd
		{
			get
			{
				return this._PeriodEnd;
			}
			set
			{
				if ((this._PeriodEnd != value))
				{
					this.OnPeriodEndChanging(value);
					this.SendPropertyChanging();
					this._PeriodEnd = value;
					this.SendPropertyChanged("PeriodEnd");
					this.OnPeriodEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningBalance", DbType="Float NOT NULL")]
		public double OpeningBalance
		{
			get
			{
				return this._OpeningBalance;
			}
			set
			{
				if ((this._OpeningBalance != value))
				{
					this.OnOpeningBalanceChanging(value);
					this.SendPropertyChanging();
					this._OpeningBalance = value;
					this.SendPropertyChanged("OpeningBalance");
					this.OnOpeningBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingBalance", DbType="Float NOT NULL")]
		public double ClosingBalance
		{
			get
			{
				return this._ClosingBalance;
			}
			set
			{
				if ((this._ClosingBalance != value))
				{
					this.OnClosingBalanceChanging(value);
					this.SendPropertyChanging();
					this._ClosingBalance = value;
					this.SendPropertyChanged("ClosingBalance");
					this.OnClosingBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualBalance", DbType="Float NOT NULL")]
		public double ActualBalance
		{
			get
			{
				return this._ActualBalance;
			}
			set
			{
				if ((this._ActualBalance != value))
				{
					this.OnActualBalanceChanging(value);
					this.SendPropertyChanging();
					this._ActualBalance = value;
					this.SendPropertyChanged("ActualBalance");
					this.OnActualBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferenceAccountID", DbType="Int")]
		public System.Nullable<int> DifferenceAccountID
		{
			get
			{
				return this._DifferenceAccountID;
			}
			set
			{
				if ((this._DifferenceAccountID != value))
				{
					this.OnDifferenceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._DifferenceAccountID = value;
					this.SendPropertyChanged("DifferenceAccountID");
					this.OnDifferenceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodUserID", DbType="SmallInt NOT NULL")]
		public short PeriodUserID
		{
			get
			{
				return this._PeriodUserID;
			}
			set
			{
				if ((this._PeriodUserID != value))
				{
					this.OnPeriodUserIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodUserID = value;
					this.SendPropertyChanged("PeriodUserID");
					this.OnPeriodUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingPeriodUserID", DbType="SmallInt")]
		public System.Nullable<short> ClosingPeriodUserID
		{
			get
			{
				return this._ClosingPeriodUserID;
			}
			set
			{
				if ((this._ClosingPeriodUserID != value))
				{
					this.OnClosingPeriodUserIDChanging(value);
					this.SendPropertyChanging();
					this._ClosingPeriodUserID = value;
					this.SendPropertyChanged("ClosingPeriodUserID");
					this.OnClosingPeriodUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawerID", DbType="SmallInt NOT NULL")]
		public short DrawerID
		{
			get
			{
				return this._DrawerID;
			}
			set
			{
				if ((this._DrawerID != value))
				{
					this.OnDrawerIDChanging(value);
					this.SendPropertyChanging();
					this._DrawerID = value;
					this.SendPropertyChanged("DrawerID");
					this.OnDrawerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingDrwerID", DbType="SmallInt")]
		public System.Nullable<short> ClosingDrwerID
		{
			get
			{
				return this._ClosingDrwerID;
			}
			set
			{
				if ((this._ClosingDrwerID != value))
				{
					this.OnClosingDrwerIDChanging(value);
					this.SendPropertyChanging();
					this._ClosingDrwerID = value;
					this.SendPropertyChanged("ClosingDrwerID");
					this.OnClosingDrwerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferdBalance", DbType="Float NOT NULL")]
		public double TransferdBalance
		{
			get
			{
				return this._TransferdBalance;
			}
			set
			{
				if ((this._TransferdBalance != value))
				{
					this.OnTransferdBalanceChanging(value);
					this.SendPropertyChanging();
					this._TransferdBalance = value;
					this.SendPropertyChanged("TransferdBalance");
					this.OnTransferdBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingBalance", DbType="Float NOT NULL")]
		public double RemainingBalance
		{
			get
			{
				return this._RemainingBalance;
			}
			set
			{
				if ((this._RemainingBalance != value))
				{
					this.OnRemainingBalanceChanging(value);
					this.SendPropertyChanging();
					this._RemainingBalance = value;
					this.SendPropertyChanged("RemainingBalance");
					this.OnRemainingBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="SmallInt NOT NULL")]
		public short BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountBank", DbType="Float")]
		public System.Nullable<double> AmountBank
		{
			get
			{
				return this._AmountBank;
			}
			set
			{
				if ((this._AmountBank != value))
				{
					this.OnAmountBankChanging(value);
					this.SendPropertyChanging();
					this._AmountBank = value;
					this.SendPropertyChanged("AmountBank");
					this.OnAmountBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToserver", DbType="Bit NOT NULL")]
		public bool SendToserver
		{
			get
			{
				return this._SendToserver;
			}
			set
			{
				if ((this._SendToserver != value))
				{
					this.OnSendToserverChanging(value);
					this.SendPropertyChanging();
					this._SendToserver = value;
					this.SendPropertyChanged("SendToserver");
					this.OnSendToserverChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSettingsProfile")]
	public partial class UserSettingsProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private byte _DefaultPayMethodInSales;
		
		private int _DefaultBox;
		
		private int _DefaultBank;
		
		private int _DefaultCustomer;
		
		private int _DefaultStore;
		
		private int _DefaultBranch;
		
		private bool _EnableTax;
		
		private double _taxDefault;
		
		private bool _CanChangeTax;
		
		private bool _TaxReadMode;
		
		private bool _CanChangePayMethod;
		
		private bool _CanChangeItemPriceInSales;
		
		private double _MaxDiscountInInvoice;
		
		private bool _CanChangeSalesInvoiceDate;
		
		private bool _CanChangeQtyInSales;
		
		private bool _CanAddProductOutBarcode;
		
		private bool _ShowlayoutControlCarData;
		
		private bool _IsInvoiceRound;
		
		private bool _showPrdQtyMssg;
		
		private short _defaultSalePriceFloar;
		
		private short _tsDefaultSalePriceAndBuy;
		
		private bool _PayPartInvoValue;
		
		private bool _isSendToECR;
		
		private string _ecrPort;
		
		private bool _GroupProductsInInvoices;
		
		private string _DefaultSalesPrinterName;
		
		private byte _InvoicePrintMode;
		
		private bool _PrintAfterSave;
		
		private bool _ReadFormScaleBarcode;
		
		private byte _BarcodeLength;
		
		private string _ScaleBarcodePrefix;
		
		private byte _ProductCodeLength;
		
		private byte _ValueCodeLength;
		
		private byte _ReadMode;
		
		private bool _IgnoreCheckDigit;
		
		private short _DivideValueBy;
		
		private byte _DefaultPrintPaper;
		
		private bool _ShowPrintMssg;
		
		private bool _GroupProductWeightInInvoices;
		
		private string _ReportingFolderName;
		
		private bool _UseRepInvoiceA4Custom;
		
		private bool _UseRepInvoiceCasherCustom;
		
		private bool _CanChangeStore;
		
		private bool _CanChangeBox;
		
		private bool _CanChangeCustomer;
		
		private bool _CanChangeBank;
		
		private bool _ShowResetMssg;
		
		private byte _PrintFileMode;
		
		private string _PrintFileDefultPathe;
		
		private bool _UseRepEntryVoucerCustom;
		
		private bool _UseRepEntryRcptCustom;
		
		private bool _UserDrawerPeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDefaultPayMethodInSalesChanging(byte value);
    partial void OnDefaultPayMethodInSalesChanged();
    partial void OnDefaultBoxChanging(int value);
    partial void OnDefaultBoxChanged();
    partial void OnDefaultBankChanging(int value);
    partial void OnDefaultBankChanged();
    partial void OnDefaultCustomerChanging(int value);
    partial void OnDefaultCustomerChanged();
    partial void OnDefaultStoreChanging(int value);
    partial void OnDefaultStoreChanged();
    partial void OnDefaultBranchChanging(int value);
    partial void OnDefaultBranchChanged();
    partial void OnEnableTaxChanging(bool value);
    partial void OnEnableTaxChanged();
    partial void OntaxDefaultChanging(double value);
    partial void OntaxDefaultChanged();
    partial void OnCanChangeTaxChanging(bool value);
    partial void OnCanChangeTaxChanged();
    partial void OnTaxReadModeChanging(bool value);
    partial void OnTaxReadModeChanged();
    partial void OnCanChangePayMethodChanging(bool value);
    partial void OnCanChangePayMethodChanged();
    partial void OnCanChangeItemPriceInSalesChanging(bool value);
    partial void OnCanChangeItemPriceInSalesChanged();
    partial void OnMaxDiscountInInvoiceChanging(double value);
    partial void OnMaxDiscountInInvoiceChanged();
    partial void OnCanChangeSalesInvoiceDateChanging(bool value);
    partial void OnCanChangeSalesInvoiceDateChanged();
    partial void OnCanChangeQtyInSalesChanging(bool value);
    partial void OnCanChangeQtyInSalesChanged();
    partial void OnCanAddProductOutBarcodeChanging(bool value);
    partial void OnCanAddProductOutBarcodeChanged();
    partial void OnShowlayoutControlCarDataChanging(bool value);
    partial void OnShowlayoutControlCarDataChanged();
    partial void OnIsInvoiceRoundChanging(bool value);
    partial void OnIsInvoiceRoundChanged();
    partial void OnshowPrdQtyMssgChanging(bool value);
    partial void OnshowPrdQtyMssgChanged();
    partial void OndefaultSalePriceFloarChanging(short value);
    partial void OndefaultSalePriceFloarChanged();
    partial void OntsDefaultSalePriceAndBuyChanging(short value);
    partial void OntsDefaultSalePriceAndBuyChanged();
    partial void OnPayPartInvoValueChanging(bool value);
    partial void OnPayPartInvoValueChanged();
    partial void OnisSendToECRChanging(bool value);
    partial void OnisSendToECRChanged();
    partial void OnecrPortChanging(string value);
    partial void OnecrPortChanged();
    partial void OnGroupProductsInInvoicesChanging(bool value);
    partial void OnGroupProductsInInvoicesChanged();
    partial void OnDefaultSalesPrinterNameChanging(string value);
    partial void OnDefaultSalesPrinterNameChanged();
    partial void OnInvoicePrintModeChanging(byte value);
    partial void OnInvoicePrintModeChanged();
    partial void OnPrintAfterSaveChanging(bool value);
    partial void OnPrintAfterSaveChanged();
    partial void OnReadFormScaleBarcodeChanging(bool value);
    partial void OnReadFormScaleBarcodeChanged();
    partial void OnBarcodeLengthChanging(byte value);
    partial void OnBarcodeLengthChanged();
    partial void OnScaleBarcodePrefixChanging(string value);
    partial void OnScaleBarcodePrefixChanged();
    partial void OnProductCodeLengthChanging(byte value);
    partial void OnProductCodeLengthChanged();
    partial void OnValueCodeLengthChanging(byte value);
    partial void OnValueCodeLengthChanged();
    partial void OnReadModeChanging(byte value);
    partial void OnReadModeChanged();
    partial void OnIgnoreCheckDigitChanging(bool value);
    partial void OnIgnoreCheckDigitChanged();
    partial void OnDivideValueByChanging(short value);
    partial void OnDivideValueByChanged();
    partial void OnDefaultPrintPaperChanging(byte value);
    partial void OnDefaultPrintPaperChanged();
    partial void OnShowPrintMssgChanging(bool value);
    partial void OnShowPrintMssgChanged();
    partial void OnGroupProductWeightInInvoicesChanging(bool value);
    partial void OnGroupProductWeightInInvoicesChanged();
    partial void OnReportingFolderNameChanging(string value);
    partial void OnReportingFolderNameChanged();
    partial void OnUseRepInvoiceA4CustomChanging(bool value);
    partial void OnUseRepInvoiceA4CustomChanged();
    partial void OnUseRepInvoiceCasherCustomChanging(bool value);
    partial void OnUseRepInvoiceCasherCustomChanged();
    partial void OnCanChangeStoreChanging(bool value);
    partial void OnCanChangeStoreChanged();
    partial void OnCanChangeBoxChanging(bool value);
    partial void OnCanChangeBoxChanged();
    partial void OnCanChangeCustomerChanging(bool value);
    partial void OnCanChangeCustomerChanged();
    partial void OnCanChangeBankChanging(bool value);
    partial void OnCanChangeBankChanged();
    partial void OnShowResetMssgChanging(bool value);
    partial void OnShowResetMssgChanged();
    partial void OnPrintFileModeChanging(byte value);
    partial void OnPrintFileModeChanged();
    partial void OnPrintFileDefultPatheChanging(string value);
    partial void OnPrintFileDefultPatheChanged();
    partial void OnUseRepEntryVoucerCustomChanging(bool value);
    partial void OnUseRepEntryVoucerCustomChanged();
    partial void OnUseRepEntryRcptCustomChanging(bool value);
    partial void OnUseRepEntryRcptCustomChanged();
    partial void OnUserDrawerPeriodChanging(bool value);
    partial void OnUserDrawerPeriodChanged();
    #endregion
		
		public UserSettingsProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPayMethodInSales", DbType="TinyInt NOT NULL")]
		public byte DefaultPayMethodInSales
		{
			get
			{
				return this._DefaultPayMethodInSales;
			}
			set
			{
				if ((this._DefaultPayMethodInSales != value))
				{
					this.OnDefaultPayMethodInSalesChanging(value);
					this.SendPropertyChanging();
					this._DefaultPayMethodInSales = value;
					this.SendPropertyChanged("DefaultPayMethodInSales");
					this.OnDefaultPayMethodInSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultBox", DbType="Int NOT NULL")]
		public int DefaultBox
		{
			get
			{
				return this._DefaultBox;
			}
			set
			{
				if ((this._DefaultBox != value))
				{
					this.OnDefaultBoxChanging(value);
					this.SendPropertyChanging();
					this._DefaultBox = value;
					this.SendPropertyChanged("DefaultBox");
					this.OnDefaultBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultBank", DbType="Int NOT NULL")]
		public int DefaultBank
		{
			get
			{
				return this._DefaultBank;
			}
			set
			{
				if ((this._DefaultBank != value))
				{
					this.OnDefaultBankChanging(value);
					this.SendPropertyChanging();
					this._DefaultBank = value;
					this.SendPropertyChanged("DefaultBank");
					this.OnDefaultBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCustomer", DbType="Int NOT NULL")]
		public int DefaultCustomer
		{
			get
			{
				return this._DefaultCustomer;
			}
			set
			{
				if ((this._DefaultCustomer != value))
				{
					this.OnDefaultCustomerChanging(value);
					this.SendPropertyChanging();
					this._DefaultCustomer = value;
					this.SendPropertyChanged("DefaultCustomer");
					this.OnDefaultCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultStore", DbType="Int NOT NULL")]
		public int DefaultStore
		{
			get
			{
				return this._DefaultStore;
			}
			set
			{
				if ((this._DefaultStore != value))
				{
					this.OnDefaultStoreChanging(value);
					this.SendPropertyChanging();
					this._DefaultStore = value;
					this.SendPropertyChanged("DefaultStore");
					this.OnDefaultStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultBranch", DbType="Int NOT NULL")]
		public int DefaultBranch
		{
			get
			{
				return this._DefaultBranch;
			}
			set
			{
				if ((this._DefaultBranch != value))
				{
					this.OnDefaultBranchChanging(value);
					this.SendPropertyChanging();
					this._DefaultBranch = value;
					this.SendPropertyChanged("DefaultBranch");
					this.OnDefaultBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableTax", DbType="Bit NOT NULL")]
		public bool EnableTax
		{
			get
			{
				return this._EnableTax;
			}
			set
			{
				if ((this._EnableTax != value))
				{
					this.OnEnableTaxChanging(value);
					this.SendPropertyChanging();
					this._EnableTax = value;
					this.SendPropertyChanged("EnableTax");
					this.OnEnableTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxDefault", DbType="Float NOT NULL")]
		public double taxDefault
		{
			get
			{
				return this._taxDefault;
			}
			set
			{
				if ((this._taxDefault != value))
				{
					this.OntaxDefaultChanging(value);
					this.SendPropertyChanging();
					this._taxDefault = value;
					this.SendPropertyChanged("taxDefault");
					this.OntaxDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangeTax", DbType="Bit NOT NULL")]
		public bool CanChangeTax
		{
			get
			{
				return this._CanChangeTax;
			}
			set
			{
				if ((this._CanChangeTax != value))
				{
					this.OnCanChangeTaxChanging(value);
					this.SendPropertyChanging();
					this._CanChangeTax = value;
					this.SendPropertyChanged("CanChangeTax");
					this.OnCanChangeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxReadMode", DbType="Bit NOT NULL")]
		public bool TaxReadMode
		{
			get
			{
				return this._TaxReadMode;
			}
			set
			{
				if ((this._TaxReadMode != value))
				{
					this.OnTaxReadModeChanging(value);
					this.SendPropertyChanging();
					this._TaxReadMode = value;
					this.SendPropertyChanged("TaxReadMode");
					this.OnTaxReadModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangePayMethod", DbType="Bit NOT NULL")]
		public bool CanChangePayMethod
		{
			get
			{
				return this._CanChangePayMethod;
			}
			set
			{
				if ((this._CanChangePayMethod != value))
				{
					this.OnCanChangePayMethodChanging(value);
					this.SendPropertyChanging();
					this._CanChangePayMethod = value;
					this.SendPropertyChanged("CanChangePayMethod");
					this.OnCanChangePayMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangeItemPriceInSales", DbType="Bit NOT NULL")]
		public bool CanChangeItemPriceInSales
		{
			get
			{
				return this._CanChangeItemPriceInSales;
			}
			set
			{
				if ((this._CanChangeItemPriceInSales != value))
				{
					this.OnCanChangeItemPriceInSalesChanging(value);
					this.SendPropertyChanging();
					this._CanChangeItemPriceInSales = value;
					this.SendPropertyChanged("CanChangeItemPriceInSales");
					this.OnCanChangeItemPriceInSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDiscountInInvoice", DbType="Float NOT NULL")]
		public double MaxDiscountInInvoice
		{
			get
			{
				return this._MaxDiscountInInvoice;
			}
			set
			{
				if ((this._MaxDiscountInInvoice != value))
				{
					this.OnMaxDiscountInInvoiceChanging(value);
					this.SendPropertyChanging();
					this._MaxDiscountInInvoice = value;
					this.SendPropertyChanged("MaxDiscountInInvoice");
					this.OnMaxDiscountInInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangeSalesInvoiceDate", DbType="Bit NOT NULL")]
		public bool CanChangeSalesInvoiceDate
		{
			get
			{
				return this._CanChangeSalesInvoiceDate;
			}
			set
			{
				if ((this._CanChangeSalesInvoiceDate != value))
				{
					this.OnCanChangeSalesInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._CanChangeSalesInvoiceDate = value;
					this.SendPropertyChanged("CanChangeSalesInvoiceDate");
					this.OnCanChangeSalesInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangeQtyInSales", DbType="Bit NOT NULL")]
		public bool CanChangeQtyInSales
		{
			get
			{
				return this._CanChangeQtyInSales;
			}
			set
			{
				if ((this._CanChangeQtyInSales != value))
				{
					this.OnCanChangeQtyInSalesChanging(value);
					this.SendPropertyChanging();
					this._CanChangeQtyInSales = value;
					this.SendPropertyChanged("CanChangeQtyInSales");
					this.OnCanChangeQtyInSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddProductOutBarcode", DbType="Bit NOT NULL")]
		public bool CanAddProductOutBarcode
		{
			get
			{
				return this._CanAddProductOutBarcode;
			}
			set
			{
				if ((this._CanAddProductOutBarcode != value))
				{
					this.OnCanAddProductOutBarcodeChanging(value);
					this.SendPropertyChanging();
					this._CanAddProductOutBarcode = value;
					this.SendPropertyChanged("CanAddProductOutBarcode");
					this.OnCanAddProductOutBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowlayoutControlCarData", DbType="Bit NOT NULL")]
		public bool ShowlayoutControlCarData
		{
			get
			{
				return this._ShowlayoutControlCarData;
			}
			set
			{
				if ((this._ShowlayoutControlCarData != value))
				{
					this.OnShowlayoutControlCarDataChanging(value);
					this.SendPropertyChanging();
					this._ShowlayoutControlCarData = value;
					this.SendPropertyChanged("ShowlayoutControlCarData");
					this.OnShowlayoutControlCarDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoiceRound", DbType="Bit NOT NULL")]
		public bool IsInvoiceRound
		{
			get
			{
				return this._IsInvoiceRound;
			}
			set
			{
				if ((this._IsInvoiceRound != value))
				{
					this.OnIsInvoiceRoundChanging(value);
					this.SendPropertyChanging();
					this._IsInvoiceRound = value;
					this.SendPropertyChanged("IsInvoiceRound");
					this.OnIsInvoiceRoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showPrdQtyMssg", DbType="Bit NOT NULL")]
		public bool showPrdQtyMssg
		{
			get
			{
				return this._showPrdQtyMssg;
			}
			set
			{
				if ((this._showPrdQtyMssg != value))
				{
					this.OnshowPrdQtyMssgChanging(value);
					this.SendPropertyChanging();
					this._showPrdQtyMssg = value;
					this.SendPropertyChanged("showPrdQtyMssg");
					this.OnshowPrdQtyMssgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defaultSalePriceFloar", DbType="SmallInt NOT NULL")]
		public short defaultSalePriceFloar
		{
			get
			{
				return this._defaultSalePriceFloar;
			}
			set
			{
				if ((this._defaultSalePriceFloar != value))
				{
					this.OndefaultSalePriceFloarChanging(value);
					this.SendPropertyChanging();
					this._defaultSalePriceFloar = value;
					this.SendPropertyChanged("defaultSalePriceFloar");
					this.OndefaultSalePriceFloarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tsDefaultSalePriceAndBuy", DbType="SmallInt NOT NULL")]
		public short tsDefaultSalePriceAndBuy
		{
			get
			{
				return this._tsDefaultSalePriceAndBuy;
			}
			set
			{
				if ((this._tsDefaultSalePriceAndBuy != value))
				{
					this.OntsDefaultSalePriceAndBuyChanging(value);
					this.SendPropertyChanging();
					this._tsDefaultSalePriceAndBuy = value;
					this.SendPropertyChanged("tsDefaultSalePriceAndBuy");
					this.OntsDefaultSalePriceAndBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPartInvoValue", DbType="Bit NOT NULL")]
		public bool PayPartInvoValue
		{
			get
			{
				return this._PayPartInvoValue;
			}
			set
			{
				if ((this._PayPartInvoValue != value))
				{
					this.OnPayPartInvoValueChanging(value);
					this.SendPropertyChanging();
					this._PayPartInvoValue = value;
					this.SendPropertyChanged("PayPartInvoValue");
					this.OnPayPartInvoValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSendToECR", DbType="Bit NOT NULL")]
		public bool isSendToECR
		{
			get
			{
				return this._isSendToECR;
			}
			set
			{
				if ((this._isSendToECR != value))
				{
					this.OnisSendToECRChanging(value);
					this.SendPropertyChanging();
					this._isSendToECR = value;
					this.SendPropertyChanged("isSendToECR");
					this.OnisSendToECRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ecrPort", DbType="NVarChar(MAX)")]
		public string ecrPort
		{
			get
			{
				return this._ecrPort;
			}
			set
			{
				if ((this._ecrPort != value))
				{
					this.OnecrPortChanging(value);
					this.SendPropertyChanging();
					this._ecrPort = value;
					this.SendPropertyChanged("ecrPort");
					this.OnecrPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupProductsInInvoices", DbType="Bit NOT NULL")]
		public bool GroupProductsInInvoices
		{
			get
			{
				return this._GroupProductsInInvoices;
			}
			set
			{
				if ((this._GroupProductsInInvoices != value))
				{
					this.OnGroupProductsInInvoicesChanging(value);
					this.SendPropertyChanging();
					this._GroupProductsInInvoices = value;
					this.SendPropertyChanged("GroupProductsInInvoices");
					this.OnGroupProductsInInvoicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSalesPrinterName", DbType="NVarChar(MAX)")]
		public string DefaultSalesPrinterName
		{
			get
			{
				return this._DefaultSalesPrinterName;
			}
			set
			{
				if ((this._DefaultSalesPrinterName != value))
				{
					this.OnDefaultSalesPrinterNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultSalesPrinterName = value;
					this.SendPropertyChanged("DefaultSalesPrinterName");
					this.OnDefaultSalesPrinterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePrintMode", DbType="TinyInt NOT NULL")]
		public byte InvoicePrintMode
		{
			get
			{
				return this._InvoicePrintMode;
			}
			set
			{
				if ((this._InvoicePrintMode != value))
				{
					this.OnInvoicePrintModeChanging(value);
					this.SendPropertyChanging();
					this._InvoicePrintMode = value;
					this.SendPropertyChanged("InvoicePrintMode");
					this.OnInvoicePrintModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintAfterSave", DbType="Bit NOT NULL")]
		public bool PrintAfterSave
		{
			get
			{
				return this._PrintAfterSave;
			}
			set
			{
				if ((this._PrintAfterSave != value))
				{
					this.OnPrintAfterSaveChanging(value);
					this.SendPropertyChanging();
					this._PrintAfterSave = value;
					this.SendPropertyChanged("PrintAfterSave");
					this.OnPrintAfterSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadFormScaleBarcode", DbType="Bit NOT NULL")]
		public bool ReadFormScaleBarcode
		{
			get
			{
				return this._ReadFormScaleBarcode;
			}
			set
			{
				if ((this._ReadFormScaleBarcode != value))
				{
					this.OnReadFormScaleBarcodeChanging(value);
					this.SendPropertyChanging();
					this._ReadFormScaleBarcode = value;
					this.SendPropertyChanged("ReadFormScaleBarcode");
					this.OnReadFormScaleBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeLength", DbType="TinyInt NOT NULL")]
		public byte BarcodeLength
		{
			get
			{
				return this._BarcodeLength;
			}
			set
			{
				if ((this._BarcodeLength != value))
				{
					this.OnBarcodeLengthChanging(value);
					this.SendPropertyChanging();
					this._BarcodeLength = value;
					this.SendPropertyChanged("BarcodeLength");
					this.OnBarcodeLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScaleBarcodePrefix", DbType="NVarChar(MAX)")]
		public string ScaleBarcodePrefix
		{
			get
			{
				return this._ScaleBarcodePrefix;
			}
			set
			{
				if ((this._ScaleBarcodePrefix != value))
				{
					this.OnScaleBarcodePrefixChanging(value);
					this.SendPropertyChanging();
					this._ScaleBarcodePrefix = value;
					this.SendPropertyChanged("ScaleBarcodePrefix");
					this.OnScaleBarcodePrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCodeLength", DbType="TinyInt NOT NULL")]
		public byte ProductCodeLength
		{
			get
			{
				return this._ProductCodeLength;
			}
			set
			{
				if ((this._ProductCodeLength != value))
				{
					this.OnProductCodeLengthChanging(value);
					this.SendPropertyChanging();
					this._ProductCodeLength = value;
					this.SendPropertyChanged("ProductCodeLength");
					this.OnProductCodeLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueCodeLength", DbType="TinyInt NOT NULL")]
		public byte ValueCodeLength
		{
			get
			{
				return this._ValueCodeLength;
			}
			set
			{
				if ((this._ValueCodeLength != value))
				{
					this.OnValueCodeLengthChanging(value);
					this.SendPropertyChanging();
					this._ValueCodeLength = value;
					this.SendPropertyChanged("ValueCodeLength");
					this.OnValueCodeLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadMode", DbType="TinyInt NOT NULL")]
		public byte ReadMode
		{
			get
			{
				return this._ReadMode;
			}
			set
			{
				if ((this._ReadMode != value))
				{
					this.OnReadModeChanging(value);
					this.SendPropertyChanging();
					this._ReadMode = value;
					this.SendPropertyChanged("ReadMode");
					this.OnReadModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgnoreCheckDigit", DbType="Bit NOT NULL")]
		public bool IgnoreCheckDigit
		{
			get
			{
				return this._IgnoreCheckDigit;
			}
			set
			{
				if ((this._IgnoreCheckDigit != value))
				{
					this.OnIgnoreCheckDigitChanging(value);
					this.SendPropertyChanging();
					this._IgnoreCheckDigit = value;
					this.SendPropertyChanged("IgnoreCheckDigit");
					this.OnIgnoreCheckDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivideValueBy", DbType="SmallInt NOT NULL")]
		public short DivideValueBy
		{
			get
			{
				return this._DivideValueBy;
			}
			set
			{
				if ((this._DivideValueBy != value))
				{
					this.OnDivideValueByChanging(value);
					this.SendPropertyChanging();
					this._DivideValueBy = value;
					this.SendPropertyChanged("DivideValueBy");
					this.OnDivideValueByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPrintPaper", DbType="TinyInt NOT NULL")]
		public byte DefaultPrintPaper
		{
			get
			{
				return this._DefaultPrintPaper;
			}
			set
			{
				if ((this._DefaultPrintPaper != value))
				{
					this.OnDefaultPrintPaperChanging(value);
					this.SendPropertyChanging();
					this._DefaultPrintPaper = value;
					this.SendPropertyChanged("DefaultPrintPaper");
					this.OnDefaultPrintPaperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowPrintMssg", DbType="Bit NOT NULL")]
		public bool ShowPrintMssg
		{
			get
			{
				return this._ShowPrintMssg;
			}
			set
			{
				if ((this._ShowPrintMssg != value))
				{
					this.OnShowPrintMssgChanging(value);
					this.SendPropertyChanging();
					this._ShowPrintMssg = value;
					this.SendPropertyChanged("ShowPrintMssg");
					this.OnShowPrintMssgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupProductWeightInInvoices", DbType="Bit NOT NULL")]
		public bool GroupProductWeightInInvoices
		{
			get
			{
				return this._GroupProductWeightInInvoices;
			}
			set
			{
				if ((this._GroupProductWeightInInvoices != value))
				{
					this.OnGroupProductWeightInInvoicesChanging(value);
					this.SendPropertyChanging();
					this._GroupProductWeightInInvoices = value;
					this.SendPropertyChanged("GroupProductWeightInInvoices");
					this.OnGroupProductWeightInInvoicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportingFolderName", DbType="NVarChar(MAX)")]
		public string ReportingFolderName
		{
			get
			{
				return this._ReportingFolderName;
			}
			set
			{
				if ((this._ReportingFolderName != value))
				{
					this.OnReportingFolderNameChanging(value);
					this.SendPropertyChanging();
					this._ReportingFolderName = value;
					this.SendPropertyChanged("ReportingFolderName");
					this.OnReportingFolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRepInvoiceA4Custom", DbType="Bit NOT NULL")]
		public bool UseRepInvoiceA4Custom
		{
			get
			{
				return this._UseRepInvoiceA4Custom;
			}
			set
			{
				if ((this._UseRepInvoiceA4Custom != value))
				{
					this.OnUseRepInvoiceA4CustomChanging(value);
					this.SendPropertyChanging();
					this._UseRepInvoiceA4Custom = value;
					this.SendPropertyChanged("UseRepInvoiceA4Custom");
					this.OnUseRepInvoiceA4CustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRepInvoiceCasherCustom", DbType="Bit NOT NULL")]
		public bool UseRepInvoiceCasherCustom
		{
			get
			{
				return this._UseRepInvoiceCasherCustom;
			}
			set
			{
				if ((this._UseRepInvoiceCasherCustom != value))
				{
					this.OnUseRepInvoiceCasherCustomChanging(value);
					this.SendPropertyChanging();
					this._UseRepInvoiceCasherCustom = value;
					this.SendPropertyChanged("UseRepInvoiceCasherCustom");
					this.OnUseRepInvoiceCasherCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangeStore", DbType="Bit NOT NULL")]
		public bool CanChangeStore
		{
			get
			{
				return this._CanChangeStore;
			}
			set
			{
				if ((this._CanChangeStore != value))
				{
					this.OnCanChangeStoreChanging(value);
					this.SendPropertyChanging();
					this._CanChangeStore = value;
					this.SendPropertyChanged("CanChangeStore");
					this.OnCanChangeStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangeBox", DbType="Bit NOT NULL")]
		public bool CanChangeBox
		{
			get
			{
				return this._CanChangeBox;
			}
			set
			{
				if ((this._CanChangeBox != value))
				{
					this.OnCanChangeBoxChanging(value);
					this.SendPropertyChanging();
					this._CanChangeBox = value;
					this.SendPropertyChanged("CanChangeBox");
					this.OnCanChangeBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangeCustomer", DbType="Bit NOT NULL")]
		public bool CanChangeCustomer
		{
			get
			{
				return this._CanChangeCustomer;
			}
			set
			{
				if ((this._CanChangeCustomer != value))
				{
					this.OnCanChangeCustomerChanging(value);
					this.SendPropertyChanging();
					this._CanChangeCustomer = value;
					this.SendPropertyChanged("CanChangeCustomer");
					this.OnCanChangeCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanChangeBank", DbType="Bit NOT NULL")]
		public bool CanChangeBank
		{
			get
			{
				return this._CanChangeBank;
			}
			set
			{
				if ((this._CanChangeBank != value))
				{
					this.OnCanChangeBankChanging(value);
					this.SendPropertyChanging();
					this._CanChangeBank = value;
					this.SendPropertyChanged("CanChangeBank");
					this.OnCanChangeBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowResetMssg", DbType="Bit NOT NULL")]
		public bool ShowResetMssg
		{
			get
			{
				return this._ShowResetMssg;
			}
			set
			{
				if ((this._ShowResetMssg != value))
				{
					this.OnShowResetMssgChanging(value);
					this.SendPropertyChanging();
					this._ShowResetMssg = value;
					this.SendPropertyChanged("ShowResetMssg");
					this.OnShowResetMssgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintFileMode", DbType="TinyInt NOT NULL")]
		public byte PrintFileMode
		{
			get
			{
				return this._PrintFileMode;
			}
			set
			{
				if ((this._PrintFileMode != value))
				{
					this.OnPrintFileModeChanging(value);
					this.SendPropertyChanging();
					this._PrintFileMode = value;
					this.SendPropertyChanged("PrintFileMode");
					this.OnPrintFileModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintFileDefultPathe", DbType="NVarChar(MAX)")]
		public string PrintFileDefultPathe
		{
			get
			{
				return this._PrintFileDefultPathe;
			}
			set
			{
				if ((this._PrintFileDefultPathe != value))
				{
					this.OnPrintFileDefultPatheChanging(value);
					this.SendPropertyChanging();
					this._PrintFileDefultPathe = value;
					this.SendPropertyChanged("PrintFileDefultPathe");
					this.OnPrintFileDefultPatheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRepEntryVoucerCustom", DbType="Bit NOT NULL")]
		public bool UseRepEntryVoucerCustom
		{
			get
			{
				return this._UseRepEntryVoucerCustom;
			}
			set
			{
				if ((this._UseRepEntryVoucerCustom != value))
				{
					this.OnUseRepEntryVoucerCustomChanging(value);
					this.SendPropertyChanging();
					this._UseRepEntryVoucerCustom = value;
					this.SendPropertyChanged("UseRepEntryVoucerCustom");
					this.OnUseRepEntryVoucerCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRepEntryRcptCustom", DbType="Bit NOT NULL")]
		public bool UseRepEntryRcptCustom
		{
			get
			{
				return this._UseRepEntryRcptCustom;
			}
			set
			{
				if ((this._UseRepEntryRcptCustom != value))
				{
					this.OnUseRepEntryRcptCustomChanging(value);
					this.SendPropertyChanging();
					this._UseRepEntryRcptCustom = value;
					this.SendPropertyChanged("UseRepEntryRcptCustom");
					this.OnUseRepEntryRcptCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDrawerPeriod", DbType="Bit NOT NULL")]
		public bool UserDrawerPeriod
		{
			get
			{
				return this._UserDrawerPeriod;
			}
			set
			{
				if ((this._UserDrawerPeriod != value))
				{
					this.OnUserDrawerPeriodChanging(value);
					this.SendPropertyChanging();
					this._UserDrawerPeriod = value;
					this.SendPropertyChanged("UserDrawerPeriod");
					this.OnUserDrawerPeriodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplyMain")]
	public partial class SupplyMain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _No;
		
		private string _RefNo;
		
		private string _Desc;
		
		private double _Total;
		
		private double _TotalFrgn;
		
		private byte _TaxPercent;
		
		private double _TaxPrice;
		
		private byte _Currency;
		
		private double _DscntPercent;
		
		private double _DscntAmount;
		
		private System.Nullable<short> _BankId;
		
		private double _BankAmount;
		
		private System.Nullable<short> _CurrencyChng;
		
		private System.Nullable<int> _CustId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private byte _IsCash;
		
		private System.Nullable<short> _StrId;
		
		private short _UserId;
		
		private System.Nullable<short> _BrnId;
		
		private byte _Status;
		
		private string _CarType;
		
		private string _PlateNumber;
		
		private string _CounterNumber;
		
		private bool _SendToserver;
		
		private bool _IsDelete;
		
		private double _paidCash;
		
		private System.Nullable<short> _BoxId;
		
		private string _PoNumber;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _EnterDate;
		
		private double _TotalAfterDiscount;
		
		private double _Net;
		
		private double _TotalPaid;
		
		private double _Remin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnTotalFrgnChanging(double value);
    partial void OnTotalFrgnChanged();
    partial void OnTaxPercentChanging(byte value);
    partial void OnTaxPercentChanged();
    partial void OnTaxPriceChanging(double value);
    partial void OnTaxPriceChanged();
    partial void OnCurrencyChanging(byte value);
    partial void OnCurrencyChanged();
    partial void OnDscntPercentChanging(double value);
    partial void OnDscntPercentChanged();
    partial void OnDscntAmountChanging(double value);
    partial void OnDscntAmountChanged();
    partial void OnBankIdChanging(System.Nullable<short> value);
    partial void OnBankIdChanged();
    partial void OnBankAmountChanging(double value);
    partial void OnBankAmountChanged();
    partial void OnCurrencyChngChanging(System.Nullable<short> value);
    partial void OnCurrencyChngChanged();
    partial void OnCustIdChanging(System.Nullable<int> value);
    partial void OnCustIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnIsCashChanging(byte value);
    partial void OnIsCashChanged();
    partial void OnStrIdChanging(System.Nullable<short> value);
    partial void OnStrIdChanged();
    partial void OnUserIdChanging(short value);
    partial void OnUserIdChanged();
    partial void OnBrnIdChanging(System.Nullable<short> value);
    partial void OnBrnIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCarTypeChanging(string value);
    partial void OnCarTypeChanged();
    partial void OnPlateNumberChanging(string value);
    partial void OnPlateNumberChanged();
    partial void OnCounterNumberChanging(string value);
    partial void OnCounterNumberChanged();
    partial void OnSendToserverChanging(bool value);
    partial void OnSendToserverChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnpaidCashChanging(double value);
    partial void OnpaidCashChanged();
    partial void OnBoxIdChanging(System.Nullable<short> value);
    partial void OnBoxIdChanged();
    partial void OnPoNumberChanging(string value);
    partial void OnPoNumberChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnEnterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterDateChanged();
    partial void OnTotalAfterDiscountChanging(double value);
    partial void OnTotalAfterDiscountChanged();
    partial void OnNetChanging(double value);
    partial void OnNetChanged();
    partial void OnTotalPaidChanging(double value);
    partial void OnTotalPaidChanged();
    partial void OnReminChanging(double value);
    partial void OnReminChanged();
    #endregion
		
		public SupplyMain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefNo", DbType="NVarChar(MAX)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(MAX)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
		public double Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFrgn", DbType="Float NOT NULL")]
		public double TotalFrgn
		{
			get
			{
				return this._TotalFrgn;
			}
			set
			{
				if ((this._TotalFrgn != value))
				{
					this.OnTotalFrgnChanging(value);
					this.SendPropertyChanging();
					this._TotalFrgn = value;
					this.SendPropertyChanged("TotalFrgn");
					this.OnTotalFrgnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPercent", DbType="TinyInt NOT NULL")]
		public byte TaxPercent
		{
			get
			{
				return this._TaxPercent;
			}
			set
			{
				if ((this._TaxPercent != value))
				{
					this.OnTaxPercentChanging(value);
					this.SendPropertyChanging();
					this._TaxPercent = value;
					this.SendPropertyChanged("TaxPercent");
					this.OnTaxPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPrice", DbType="Float NOT NULL")]
		public double TaxPrice
		{
			get
			{
				return this._TaxPrice;
			}
			set
			{
				if ((this._TaxPrice != value))
				{
					this.OnTaxPriceChanging(value);
					this.SendPropertyChanging();
					this._TaxPrice = value;
					this.SendPropertyChanged("TaxPrice");
					this.OnTaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="TinyInt NOT NULL")]
		public byte Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DscntPercent", DbType="Float NOT NULL")]
		public double DscntPercent
		{
			get
			{
				return this._DscntPercent;
			}
			set
			{
				if ((this._DscntPercent != value))
				{
					this.OnDscntPercentChanging(value);
					this.SendPropertyChanging();
					this._DscntPercent = value;
					this.SendPropertyChanged("DscntPercent");
					this.OnDscntPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DscntAmount", DbType="Float NOT NULL")]
		public double DscntAmount
		{
			get
			{
				return this._DscntAmount;
			}
			set
			{
				if ((this._DscntAmount != value))
				{
					this.OnDscntAmountChanging(value);
					this.SendPropertyChanging();
					this._DscntAmount = value;
					this.SendPropertyChanged("DscntAmount");
					this.OnDscntAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="SmallInt")]
		public System.Nullable<short> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAmount", DbType="Float NOT NULL")]
		public double BankAmount
		{
			get
			{
				return this._BankAmount;
			}
			set
			{
				if ((this._BankAmount != value))
				{
					this.OnBankAmountChanging(value);
					this.SendPropertyChanging();
					this._BankAmount = value;
					this.SendPropertyChanged("BankAmount");
					this.OnBankAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyChng", DbType="SmallInt")]
		public System.Nullable<short> CurrencyChng
		{
			get
			{
				return this._CurrencyChng;
			}
			set
			{
				if ((this._CurrencyChng != value))
				{
					this.OnCurrencyChngChanging(value);
					this.SendPropertyChanging();
					this._CurrencyChng = value;
					this.SendPropertyChanged("CurrencyChng");
					this.OnCurrencyChngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustId", DbType="Int")]
		public System.Nullable<int> CustId
		{
			get
			{
				return this._CustId;
			}
			set
			{
				if ((this._CustId != value))
				{
					this.OnCustIdChanging(value);
					this.SendPropertyChanging();
					this._CustId = value;
					this.SendPropertyChanged("CustId");
					this.OnCustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCash", DbType="TinyInt NOT NULL")]
		public byte IsCash
		{
			get
			{
				return this._IsCash;
			}
			set
			{
				if ((this._IsCash != value))
				{
					this.OnIsCashChanging(value);
					this.SendPropertyChanging();
					this._IsCash = value;
					this.SendPropertyChanged("IsCash");
					this.OnIsCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrId", DbType="SmallInt")]
		public System.Nullable<short> StrId
		{
			get
			{
				return this._StrId;
			}
			set
			{
				if ((this._StrId != value))
				{
					this.OnStrIdChanging(value);
					this.SendPropertyChanging();
					this._StrId = value;
					this.SendPropertyChanged("StrId");
					this.OnStrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="SmallInt NOT NULL")]
		public short UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrnId", DbType="SmallInt")]
		public System.Nullable<short> BrnId
		{
			get
			{
				return this._BrnId;
			}
			set
			{
				if ((this._BrnId != value))
				{
					this.OnBrnIdChanging(value);
					this.SendPropertyChanging();
					this._BrnId = value;
					this.SendPropertyChanged("BrnId");
					this.OnBrnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarType", DbType="NVarChar(MAX)")]
		public string CarType
		{
			get
			{
				return this._CarType;
			}
			set
			{
				if ((this._CarType != value))
				{
					this.OnCarTypeChanging(value);
					this.SendPropertyChanging();
					this._CarType = value;
					this.SendPropertyChanged("CarType");
					this.OnCarTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNumber", DbType="NVarChar(MAX)")]
		public string PlateNumber
		{
			get
			{
				return this._PlateNumber;
			}
			set
			{
				if ((this._PlateNumber != value))
				{
					this.OnPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._PlateNumber = value;
					this.SendPropertyChanged("PlateNumber");
					this.OnPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterNumber", DbType="NVarChar(MAX)")]
		public string CounterNumber
		{
			get
			{
				return this._CounterNumber;
			}
			set
			{
				if ((this._CounterNumber != value))
				{
					this.OnCounterNumberChanging(value);
					this.SendPropertyChanging();
					this._CounterNumber = value;
					this.SendPropertyChanged("CounterNumber");
					this.OnCounterNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToserver", DbType="Bit NOT NULL")]
		public bool SendToserver
		{
			get
			{
				return this._SendToserver;
			}
			set
			{
				if ((this._SendToserver != value))
				{
					this.OnSendToserverChanging(value);
					this.SendPropertyChanging();
					this._SendToserver = value;
					this.SendPropertyChanged("SendToserver");
					this.OnSendToserverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidCash", DbType="Float NOT NULL")]
		public double paidCash
		{
			get
			{
				return this._paidCash;
			}
			set
			{
				if ((this._paidCash != value))
				{
					this.OnpaidCashChanging(value);
					this.SendPropertyChanging();
					this._paidCash = value;
					this.SendPropertyChanged("paidCash");
					this.OnpaidCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxId", DbType="SmallInt")]
		public System.Nullable<short> BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoNumber", DbType="NVarChar(MAX)")]
		public string PoNumber
		{
			get
			{
				return this._PoNumber;
			}
			set
			{
				if ((this._PoNumber != value))
				{
					this.OnPoNumberChanging(value);
					this.SendPropertyChanging();
					this._PoNumber = value;
					this.SendPropertyChanged("PoNumber");
					this.OnPoNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterDate
		{
			get
			{
				return this._EnterDate;
			}
			set
			{
				if ((this._EnterDate != value))
				{
					this.OnEnterDateChanging(value);
					this.SendPropertyChanging();
					this._EnterDate = value;
					this.SendPropertyChanged("EnterDate");
					this.OnEnterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAfterDiscount", AutoSync=AutoSync.Always, DbType="Float NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public double TotalAfterDiscount
		{
			get
			{
				return this._TotalAfterDiscount;
			}
			set
			{
				if ((this._TotalAfterDiscount != value))
				{
					this.OnTotalAfterDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalAfterDiscount = value;
					this.SendPropertyChanged("TotalAfterDiscount");
					this.OnTotalAfterDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", AutoSync=AutoSync.Always, DbType="Float NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public double Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPaid", AutoSync=AutoSync.Always, DbType="Float NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public double TotalPaid
		{
			get
			{
				return this._TotalPaid;
			}
			set
			{
				if ((this._TotalPaid != value))
				{
					this.OnTotalPaidChanging(value);
					this.SendPropertyChanging();
					this._TotalPaid = value;
					this.SendPropertyChanged("TotalPaid");
					this.OnTotalPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remin", AutoSync=AutoSync.Always, DbType="Float NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public double Remin
		{
			get
			{
				return this._Remin;
			}
			set
			{
				if ((this._Remin != value))
				{
					this.OnReminChanging(value);
					this.SendPropertyChanging();
					this._Remin = value;
					this.SendPropertyChanged("Remin");
					this.OnReminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetColumnForTableResult
	{
		
		private string _ColumnName;
		
		private bool _is_identity;
		
		private int _user_type_id;
		
		private bool _is_computed;
		
		private System.Nullable<bool> _is_nullable;
		
		private short _max_length;
		
		private string _Caption;
		
		private string _Type;
		
		private string _TableName;
		
		private System.DateTime _modify_date;
		
		public GetColumnForTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(128)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this._ColumnName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_identity", DbType="Bit NOT NULL")]
		public bool is_identity
		{
			get
			{
				return this._is_identity;
			}
			set
			{
				if ((this._is_identity != value))
				{
					this._is_identity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_type_id", DbType="Int NOT NULL")]
		public int user_type_id
		{
			get
			{
				return this._user_type_id;
			}
			set
			{
				if ((this._user_type_id != value))
				{
					this._user_type_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_computed", DbType="Bit NOT NULL")]
		public bool is_computed
		{
			get
			{
				return this._is_computed;
			}
			set
			{
				if ((this._is_computed != value))
				{
					this._is_computed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_nullable", DbType="Bit")]
		public System.Nullable<bool> is_nullable
		{
			get
			{
				return this._is_nullable;
			}
			set
			{
				if ((this._is_nullable != value))
				{
					this._is_nullable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_length", DbType="SmallInt NOT NULL")]
		public short max_length
		{
			get
			{
				return this._max_length;
			}
			set
			{
				if ((this._max_length != value))
				{
					this._max_length = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this._Caption = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modify_date", DbType="DateTime NOT NULL")]
		public System.DateTime modify_date
		{
			get
			{
				return this._modify_date;
			}
			set
			{
				if ((this._modify_date != value))
				{
					this._modify_date = value;
				}
			}
		}
	}
	
	public partial class GetOpeningBalanceResult
	{
		
		private double _Column1;
		
		public GetOpeningBalanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Float NOT NULL")]
		public double Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
